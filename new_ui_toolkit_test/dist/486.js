"use strict";(self.webpackChunk_crownfi_css_gothic_fantasy=self.webpackChunk_crownfi_css_gothic_fantasy||[]).push([[486],{486:(e,t,n)=>{n.r(t);const r=Object.getOwnPropertyDescriptor(HTMLInputElement.prototype,"valueAsNumber");function a(e,t=e.valueAsNumber){if("range"!==e.type)return;const n=""===e.min||isNaN(e.min)?0:Number(e.min),r=""===e.max||isNaN(e.max)?100:Number(e.max);e.style.setProperty("--range-workaround-fill-amount",(t-n)/(r-n)+"")}const o=Symbol("rangeProgressWorkaroundApplied");function s(e){function t(t){if(t=Number(t),isNaN(t)){const n=""===e.min||isNaN(e.min)?0:Number(e.min),r=""===e.max||isNaN(e.max)?100:Number(e.max);t=Math.round((n+r)/2)}a(e,t),r.set.call(e,t)}e[o]?"range"!=e.type&&(delete e.value,delete e.valueAsNumber,delete e[o]):"range"==e.type&&(Object.defineProperty(e,"value",{set:t,get:()=>String(r.get.call(e))}),Object.defineProperty(e,"valueAsNumber",{set:t,get:()=>r.get.call(e)}),e[o]=!0,a(e))}function i(e){a(e.target)}document.addEventListener("input",i,{passive:!0}),document.addEventListener("change",i,{passive:!0});const u=new MutationObserver((e=>{for(const t of e){for(const e of t.addedNodes)e instanceof HTMLInputElement&&s(e);t.target instanceof HTMLInputElement&&s(t.target)}}));function c(){document.querySelectorAll('input[type="range"]').forEach((e=>{s(e)})),u.observe(document.body,{childList:!0,subtree:!0,attributeFilter:["type"]})}"loading"==document.readyState?document.addEventListener("DOMContentLoaded",c):c()}}]);