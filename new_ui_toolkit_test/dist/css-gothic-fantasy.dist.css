/*!*****************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js!./styles/shared/palette.css ***!
  \*****************************************************************************/
/* Copyright © 2024 Crown Finance Ltd. All Rights Reserved. */
:root {
	--colour-neutral-primary: #FFFFFF;
	--colour-neutral-secondary: #8D8D8D;

	--colour-primary-900: #18141C;
	--colour-primary-800: #19151E;
	--colour-primary-700: #292231;
	--colour-primary-600: #38303F;
	--colour-primary-500: #454655;

	--colour-primary-900-a50: #18141C80;
	--colour-primary-800-a50: #19151E80;
	--colour-primary-700-a50: #29223180;
	--colour-primary-600-a50: #38303F80;
	--colour-primary-500-a50: #45465580;

	--colour-primary-900-a0: #18141C00;
	--colour-primary-800-a0: #19151E00;
	--colour-primary-700-a0: #29223100;
	--colour-primary-600-a0: #38303F00;
	--colour-primary-500-a0: #45465500;

	--colour-secondary-900: #FCAC6A;
	--colour-secondary-800: #FEBC86;
	--colour-secondary-700: #FFD9A5;
	--colour-secondary-600: #FFF5C4;
	--colour-secondary-500: #FFECD6;

	--colour-secondary-900-a50: #FCAC6A80;
	--colour-secondary-800-a50: #FEBC8680;
	--colour-secondary-700-a50: #FFD9A580;
	--colour-secondary-600-a50: #FFF5C480;
	--colour-secondary-500-a50: #FFECD680;


	--colour-secondary-900-a0: #FCAC6A00;
	--colour-secondary-800-a0: #FEBC8600;
	--colour-secondary-700-a0: #FFD9A500;
	--colour-secondary-600-a0: #FFF5C400;
	--colour-secondary-500-a0: #FFECD600;

	/* Used as the "primary" brand colour for things that don't call for gradients */
	--colour-brand-palette-gold: #EFD770;
	--colour-brand-palette-silver: #EAEAEA;
	--colour-brand-palette-obsidian: #17131B;

	--colour-error: #FF6060;
	--colour-warning: #FFBD3C;
	--colour-success: #B5FF6B;

	--colour-error-a50: #FF606080;
	--colour-warning-a50: #FFBD3C80;
	--colour-success-a50: #B5FF6B80;

	--colour-error-a0: #FF606000;
	--colour-warning-a0: #FFBD3C00;
	--colour-success-a0: #B5FF6B00;

	/* Also used as the "primary" gradient on things, primary text, etc. */
	--linear-gradient-active: linear-gradient(0deg, #F7A665, #E2D9B3);
	--linear-gradient-disabled: linear-gradient(0deg, #6F6F6F99, #B5B5B599);
	--linear-gradient-error: linear-gradient(0deg, #FF7474, #FFADAD);
	--linear-gradient-warning: linear-gradient(0deg, #FFBA33, #E4BF77);
	--linear-gradient-success: linear-gradient(0deg, #66CC00, #B7FF6F);

	--linear-gradient-active-background: linear-gradient(0deg, #96663F33, #FCAC6A33);
	--linear-gradient-error-background: linear-gradient(0deg, #993A3A33, #FF606033);
	--linear-gradient-warning-background: linear-gradient(0deg, #996E0033, #FFB80033);
	--linear-gradient-success-background: linear-gradient(0deg, #33660033, #66CC0033);

	--conic-gradient-active: conic-gradient(from 180deg, #EDB96C, #FEBC86 190deg, #654F32);
	--conic-gradient-disabled: conic-gradient(from 180deg, #FDFDFD, #616161);
	--linear-gradient-button-fill: linear-gradient(0deg, #18141D, #32273D);
	--linear-gradient-button-disabled-fill: linear-gradient(0deg, #292929, #696969);
	--linear-gradient-button-disabled-outline: linear-gradient(0deg, #616161, #FDFDFD);

	--colour--input-group-text: #C0B1A3;
	--input-group-bg: #534F6333;
	--input-group-bg-disabled: #8D8D8D33;
	--input-group-bg-active: var(--linear-gradient-active-background);
	--input-group-bg-error: var(--linear-gradient-error-background);
	--input-group-bg-warning: var(--linear-gradient-warning-background);
	--input-group-bg-success: var(--linear-gradient-success-background);

	--spacing-1: 8px;
	--spacing-2: 16px;
	--spacing-3: 24px;
	--spacing-4: 32px;
	--spacing-5: 40px;
	--spacing-6: 48px;
	--spacing-7: 56px;
	--spacing-8: 72px;
	--spacing-9: 80px;
	--spacing-10: 96px;
	--spacing-11: 120px;

	--background-container: radial-gradient(70.71% 70.71% at 2.25% 100%, #241E29FF 0%, #17131C00 100%), radial-gradient(70.71% 70.71% at 100% 0%, #241E29FF 0%, #17131C00 100%), var(--colour-primary-800);
	--background-container-noisy: url(3510f552cfbed4d47624.png) 0% 0% / 100px 100px repeat, var(--background-container);
}

/*!*****************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js!./styles/shared/loading.css ***!
  \*****************************************************************************/
/* Copyright © 2024 Crown Finance Ltd. All Rights Reserved. */
.loading-spinner {
	content: url(8647d685d770b7bdad22.svg);
}
.lazy-loading {
	/* Makes the position, width, and height for the ::before element work */
	position: relative;
}
.lazy-loading::after {
	content: "-";
	color: transparent;
	display: block;
	position: absolute;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
	background-color: var(--colour-primary-900-a50);
	background-position: center;
	background-repeat: no-repeat;
	background-image: url(8647d685d770b7bdad22.svg);
	background-size: 48px auto;
	border-radius: inherit;
	backdrop-filter: grayscale(0.1) contrast(0.8) blur(3px);
	z-index: 10;
}
@supports not (backdrop-filter: blur(3px)){
	.lazy-loading::after {
		/* Remove after Safari stops thinking different */
		-webkit-backdrop-filter: grayscale(0.1) contrast(0.8) blur(3px);
	}
}

.loading-spinner-inline::after {
	display: inline-block;
	color: transparent;
	content: "-";
	background: url(8647d685d770b7bdad22.svg) center / auto 100% no-repeat;
	height: 1.2em;
	width: 1.2em;
}

.loading-spinner-text::after {
	content: "⣿";
}
.loading-spinner-text-2::after {
	content: "⣿⣿";
}
.loading-spinner-text-4::after {
	content: "⣿⣿⣿⣿";
}

@keyframes lazy-loading-braille {
	0.00% { content: "⠋"; }
	12.50% { content: "⠙"; }
	25.00% { content: "⠸"; }
	37.50% { content: "⢰"; }
	50.00% { content: "⣠"; }
	62.50% { content: "⣄"; }
	75.00% { content: "⡆"; }
	87.50% { content: "⠇"; }
	100.00% { content: "⠋"; }
}

@keyframes lazy-loading-braille-2 {
	  0.00% { content: "⠋⠀"; }
	  8.33% { content: "⠉⠁"; }
	 16.67% { content: "⠈⠉"; }
	 25.00% { content: "⠀⠙"; }
	 33.33% { content: "⠀⠸"; }
	 41.67% { content: "⠀⢰"; }
	 50.00% { content: "⠀⣠"; }
	 58.33% { content: "⢀⣀"; }
	 66.67% { content: "⣀⡀"; }
	 75.00% { content: "⣄⠀"; }
	 83.33% { content: "⡆⠀"; }
	 91.67% { content: "⠇⠀"; }
	100.00% { content: "⠋⠀"; }
}
@keyframes lazy-loading-braille-4 {
	  0% { content: "⠋⠀⠀⠀"; }
	  5% { content: "⠉⠁⠀⠀"; }
	 10% { content: "⠈⠉⠀⠀"; }
	 15% { content: "⠀⠉⠁⠀"; }
	 20% { content: "⠀⠈⠉⠀"; }
	 25% { content: "⠀⠀⠉⠁"; }
	 30% { content: "⠀⠀⠈⠉"; }
	 35% { content: "⠀⠀⠀⠙"; }
	 40% { content: "⠀⠀⠀⠸"; }
	 45% { content: "⠀⠀⠀⢰"; }
	 50% { content: "⠀⠀⠀⣠"; }
	 55% { content: "⠀⠀⢀⣀"; }
	 60% { content: "⠀⠀⣀⡀"; }
	 65% { content: "⠀⢀⣀⠀"; }
	 70% { content: "⠀⣀⡀⠀"; }
	 75% { content: "⢀⣀⠀⠀"; }
	 80% { content: "⣀⡀⠀⠀"; }
	 85% { content: "⣄⠀⠀⠀"; }
	 90% { content: "⡆⠀⠀⠀"; }
	 95% { content: "⠇⠀⠀⠀"; }
	100% { content: "⠋⠀⠀⠀"; }
}
.loading-spinner-text::after {
	animation: 0.75s linear 0s infinite lazy-loading-braille;
}
.loading-spinner-text-2::after {
	animation: 0.75s linear 0s infinite lazy-loading-braille-2;
}
.loading-spinner-text-4::after {
	animation: 1.5s linear 0s infinite lazy-loading-braille-4;
}


.loading-spinner-text-double::before {
	content: "⣿⠀";
}
@keyframes lazy-loading-braille-left {
	0.00% { content: "⠋⠀"; }
	12.50% { content: "⠙⠀"; }
	25.00% { content: "⠸⠀"; }
	37.50% { content: "⢰⠀"; }
	50.00% { content: "⣠⠀"; }
	62.50% { content: "⣄⠀"; }
	75.00% { content: "⡆⠀"; }
	87.50% { content: "⠇⠀"; }
	100.00% { content: "⠋⠀"; }
}
@keyframes lazy-loading-braille-right {
	0.00% { content: "⠀⠋"; }
	12.50% { content: "⠀⠙"; }
	25.00% { content: "⠀⠸"; }
	37.50% { content: "⠀⢰"; }
	50.00% { content: "⠀⣠"; }
	62.50% { content: "⠀⣄"; }
	75.00% { content: "⠀⡆"; }
	87.50% { content: "⠀⠇"; }
	100.00% { content: "⠀⠋"; }
}

.loading-spinner-text-double::after {
	content: "⠀⣿";
}
.loading-spinner-text-double::before {
	animation: 0.75s linear 0s infinite lazy-loading-braille-left;
}
.loading-spinner-text-double::after {
	animation: 0.75s linear 0s infinite lazy-loading-braille-right;
}

/*!***************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js!./styles/shared/fonts.css ***!
  \***************************************************************************/
/* Copyright © 2024 Crown Finance Ltd. All Rights Reserved. */
/* Font definitions */
@font-face {
	font-family: "baskervville";
	src: url(f901739d83410218a9d2.ttf);
}
@font-face {
	font-family: "baskervville";
	src: url(758e17d0d7e61e45d62c.ttf);
	font-style: italic;
}

/* FIXME: There must be a better way of properly supporting variable width fonts */
@font-face {
	font-family: "raleway";
	src: url(e14d84ccec6be3ff19e3.ttf);
	font-weight: 100;
	font-variation-settings: "wght" 100;
}
@font-face {
	font-family: "raleway";
	src: url(41e517c091a20a1c6756.ttf);
	font-style: italic;
	font-weight: 100;
	font-variation-settings: "wght" 100;
}
@font-face {
	font-family: "raleway";
	src: url(e14d84ccec6be3ff19e3.ttf);
	font-weight: 200;
	font-variation-settings: "wght" 200;
}
@font-face {
	font-family: "raleway";
	src: url(41e517c091a20a1c6756.ttf);
	font-style: italic;
	font-weight: 200;
	font-variation-settings: "wght" 200;
}
@font-face {
	font-family: "raleway";
	src: url(e14d84ccec6be3ff19e3.ttf);
	font-weight: 300;
	font-variation-settings: "wght" 300;
}
@font-face {
	font-family: "raleway";
	src: url(41e517c091a20a1c6756.ttf);
	font-style: italic;
	font-weight: 300;
	font-variation-settings: "wght" 300;
}
@font-face {
	font-family: "raleway";
	src: url(e14d84ccec6be3ff19e3.ttf);
	font-weight: 400;
	font-variation-settings: "wght" 400;
}
@font-face {
	font-family: "raleway";
	src: url(41e517c091a20a1c6756.ttf);
	font-style: italic;
	font-weight: 400;
	font-variation-settings: "wght" 400;
}
@font-face {
	font-family: "raleway";
	src: url(e14d84ccec6be3ff19e3.ttf);
	font-weight: 500;
	font-variation-settings: "wght" 500;
}
@font-face {
	font-family: "raleway";
	src: url(41e517c091a20a1c6756.ttf);
	font-style: italic;
	font-weight: 500;
	font-variation-settings: "wght" 500;
}
@font-face {
	font-family: "raleway";
	src: url(e14d84ccec6be3ff19e3.ttf);
	font-weight: 600;
	font-variation-settings: "wght" 600;
}
@font-face {
	font-family: "raleway";
	src: url(41e517c091a20a1c6756.ttf);
	font-style: italic;
	font-weight: 600;
	font-variation-settings: "wght" 600;
}
@font-face {
	font-family: "raleway";
	src: url(e14d84ccec6be3ff19e3.ttf);
	font-weight: 700;
	font-variation-settings: "wght" 700;
}
@font-face {
	font-family: "raleway";
	src: url(41e517c091a20a1c6756.ttf);
	font-style: italic;
	font-weight: 700;
	font-variation-settings: "wght" 700;
}
@font-face {
	font-family: "raleway";
	src: url(e14d84ccec6be3ff19e3.ttf);
	font-weight: 800;
	font-variation-settings: "wght" 800;
}
@font-face {
	font-family: "raleway";
	src: url(41e517c091a20a1c6756.ttf);
	font-style: italic;
	font-weight: 800;
	font-variation-settings: "wght" 800;
}
@font-face {
	font-family: "raleway";
	src: url(e14d84ccec6be3ff19e3.ttf);
	font-weight: 900;
	font-variation-settings: "wght" 900;
}
@font-face {
	font-family: "raleway";
	src: url(41e517c091a20a1c6756.ttf);
	font-style: italic;
	font-weight: 900;
	font-variation-settings: "wght" 900;
}

/* Default text */
:root {
	/* size definitions to inherent */
	--font-size-small: 14px;
	--font-size-normal: 16px;
	--font-size-medium: 18px;
	--font-size-large: 20px;
	--font-size-xlarge: 24px;
	--font-size-h1: 56px;
	--font-size-h2: 48px;
	--font-size-h3: 40px;
	--font-size-h4: 32px;
	--font-size-h5: 24px;
	--font-size-h6: 20px;
	--font-family-default: "raleway", sans-serif;
	--font-family-fantasy: "baskervville", serif;

	--line-height-body: 1.4;
	--line-height-body-em: 1.4em;
	--line-height-headings: 1.0;
	--line-height-headings-em: 1.0em;
	--line-height-headings-fantasy: 1.1;
	--line-height-headings-fantasy-em: 1.1em;

	/* Do not use "fake" italic and bold fonts */
	font-synthesis: small-caps position;
	font-family: var(--font-family-default);
	color: var(--colour-neutral-primary);

	font-size: var(--font-size-normal);
	line-height: var(--line-height-body);
}
a {
	color: var(--colour-secondary-500);
}
a:active {
	color: var(--colour-secondary-800);
}
a:focus-visible {
	outline: 1px solid var(--colour-secondary-500);
}

/* Obvious places to use these size definitions */
.text-small {
	font-size: var(--font-size-small);
}
.text-medium {
	font-size: var(--font-size-medium);
}
.text-large {
	font-size: var(--font-size-large);
}
h1 {
	font-size: var(--font-size-h1);
}
h2 {
	font-size: var(--font-size-h2);
}
h3 {
	font-size: var(--font-size-h3);
}
h4 {
	font-size: var(--font-size-h4);
}
h5 {
	font-size: var(--font-size-h5);
}
h6 {
	font-size: var(--font-size-h6);
}
h1, h2, h3, h4, h5, h6 {
	line-height: var(--line-height-headings);
	font-weight: normal;
	margin: calc(var(--line-height-headings-em) - 1em) 0em;
}

.text-fantasy {
	/* baskervville doesn't have a bold varient, so it can be faked. Looks fugly, but w/e */
	font-synthesis: weight small-caps position;
	font-family: var(--font-family-fantasy);
}
.text-fantasy:is(h1, h2, h3, h4, h5, h6),
.text-fantasy *:is(h1, h2, h3, h4, h5, h6) {
	line-height: var(--line-height-headings-fantasy);
	margin: calc(var(--line-height-headings-fantasy-em) - 1em) 0em;
}

.text-primary {
	color: var(--colour-brand-palette-gold);
}

@supports (background-clip: text) {
	/*
		Note: Chrome may not like text-clipped backgrounds when within elements which aren't "position: fixed;"
		See: https://issues.chromium.org/issues/40940567
	*/
	.text-fantasy.text-primary,
	.text-fantasy .text-primary,
	.text-primary .text-fantasy
	{
		background: var(--linear-gradient-active);
		background-clip: text;
		color: #00000000;
	}
	.text-fantasy.text-primary:is(h1, h2, h3, h4, h5, h6),
	.text-fantasy .text-primary:is(h1, h2, h3, h4, h5, h6),
	.text-fantasy .text-primary *:is(h1, h2, h3, h4, h5, h6),
	.text-primary .text-fantasy:is(h1, h2, h3, h4, h5, h6)
	.text-primary .text-fantasy *:is(h1, h2, h3, h4, h5, h6)
	{
		/* Ensures the background image extends to the letter descenders */
		padding-bottom: 0.2em;
		/* Extra 0.2em is subtracted to compensate for the padding */
		margin-bottom: calc(var(--line-height-headings-fantasy-em) - 1.2em);
	}
}
  

/*!***************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js!./styles/shared/icons.css ***!
  \***************************************************************************/
/* Copyright © 2024 Crown Finance Ltd. All Rights Reserved. */
@font-face {
	font-family: "crowndings";
	src: url(77be610d7bf941c52272.ttf);
}
:root {
	--icon-size-xsmall: 16px;
	--icon-size-small: 24px;
	--icon-size-medium: 32px;
	--icon-size-large: 42px;
	--icon-size-double: 48px; /* TODO: Something uses this. I forget what. It shouldn't. Double is a terrible name */
	--icon-size-xlarge: 48px;
	--icon-size-xxlarge: 96px;
	--icon-size-xxxlarge: 128px; /* ( ͡° ͜ʖ ͡°) */
}
.cicon, .dialog-cicon {
	font-family: "crowndings";
	font-synthesis: none;
	text-transform: none;
	line-height: 1;
	-webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;
}
.primary .cicon, .cicon.primary {
	color: var(--colour-brand-palette-gold);
}
.danger .cicon, .cicon.danger {
	color: var(--colour-error);
}
.warning .cicon, .cicon.warning {
	color: var(--colour-warning);
}
.success .cicon, .cicon.success {
	color: var(--colour-success);
}

.cicon.cicon-gradient, .dialog-cicon {
	background: currentcolor;
	background-clip: text;
	color: transparent;
}
.primary .cicon.cicon-gradient,
.cicon.cicon-gradient.primary,
.dialog-cicon {
	background-image: var(--linear-gradient-active);
}
.danger .cicon.cicon-gradient,
.cicon.cicon-gradient.danger,
.danger .dialog-cicon {
	background-image: var(--linear-gradient-error);
}
.warning .cicon.cicon-gradient,
.cicon.cicon-gradient.warning,
.warning .dialog-cicon 
{
	background-image: var(--linear-gradient-warning);
}
.success .cicon.cicon-gradient,
.cicon.cicon-gradient.success,
.success .dialog-cicon {
	background-image: var(--linear-gradient-success);
}

.cicon-size-xsmall {
	font-size: var(--icon-size-xsmall);
}
.cicon-size-small {
	font-size: var(--icon-size-small);
}
.cicon-size-medium {
	font-size: var(--icon-size-medium);
}
.cicon-size-large {
	font-size: var(--icon-size-large);
}
.cicon-size-xlarge, .dialog-cicon {
	font-size: var(--icon-size-xlarge);
}
.cicon-size-xxlarge {
	font-size: var(--icon-size-xxlarge);
}
.cicon-size-xxxlarge {
	font-size: var(--icon-size-xxxlarge);
}
:where(.cicon:empty)::before {
	content: "\e1ff";
}
.cicon-activity::before {
	content: "\e001";
}
.cicon-add-cart::before {
	content: "\e002";
}
.cicon-add-list::before {
	content: "\e003";
}
.cicon-align-bottom::before {
	content: "\e004";
}
.cicon-align-center::before {
	content: "\e005";
}
.cicon-align-left::before {
	content: "\e006";
}
.cicon-align-right::before {
	content: "\e007";
}
.cicon-align-top::before {
	content: "\e008";
}
.cicon-align-vertically::before {
	content: "\e009";
}
.cicon-angry::before {
	content: "\e00a";
}
.cicon-app-menu::before {
	content: "\e00b";
}
.cicon-apron::before {
	content: "\e00c";
}
.cicon-arrow-down::before {
	content: "\e00d";
}
.cicon-arrow-left::before {
	content: "\e00e";
}
.cicon-arrow-right::before {
	content: "\e00f";
}
.cicon-arrow-up::before {
	content: "\e010";
}
.cicon-artboard::before {
	content: "\e011";
}
.cicon-audio-player::before {
	content: "\e012";
}
.cicon-backward::before {
	content: "\e013";
}
.cicon-bar-chart::before {
	content: "\e014";
}
.cicon-bar::before {
	content: "\e015";
}
.cicon-beer::before {
	content: "\e016";
}
.cicon-beginner::before {
	content: "\e017";
}
.cicon-bell::before {
	content: "\e018";
}
.cicon-birthday-cake::before {
	content: "\e019";
}
.cicon-bold::before {
	content: "\e01a";
}
.cicon-bolt::before {
	content: "\e01b";
}
.cicon-book-alt::before {
	content: "\e01c";
}
.cicon-bookmark::before {
	content: "\e01d";
}
.cicon-book::before {
	content: "\e01e";
}
.cicon-bread::before {
	content: "\e01f";
}
.cicon-browser::before {
	content: "\e020";
}
.cicon-brush::before {
	content: "\e021";
}
.cicon-bug::before {
	content: "\e022";
}
.cicon-building::before {
	content: "\e023";
}
.cicon-cage::before {
	content: "\e024";
}
.cicon-calendar::before {
	content: "\e025";
}
.cicon-camera::before {
	content: "\e026";
}
.cicon-cart::before {
	content: "\e027";
}
.cicon-check-circle-o::before {
	content: "\e028";
}
.cicon-check-circle::before {
	content: "\e029";
}
.cicon-check::before {
	content: "\e02a";
}
.cicon-check-verified::before {
	content: "\e02b";
}
.cicon-clock::before {
	content: "\e02c";
}
.cicon-close::before {
	content: "\e02d";
}
.cicon-cloud-drizzle::before {
	content: "\e02e";
}
.cicon-cloud-lighting::before {
	content: "\e02f";
}
.cicon-cloud-raining::before {
	content: "\e030";
}
.cicon-cloud-snow::before {
	content: "\e031";
}
.cicon-cloud-sun::before {
	content: "\e032";
}
.cicon-cloud::before {
	content: "\e033";
}
.cicon-cloud-wind::before {
	content: "\e034";
}
.cicon-cloudy::before {
	content: "\e035";
}
.cicon-cocktail::before {
	content: "\e036";
}
.cicon-code::before {
	content: "\e037";
}
.cicon-coffee::before {
	content: "\e038";
}
.cicon-columns::before {
	content: "\e039";
}
.cicon-commenting::before {
	content: "\e03a";
}
.cicon-comment-o::before {
	content: "\e03b";
}
.cicon-comments::before {
	content: "\e03c";
}
.cicon-comment::before {
	content: "\e03d";
}
.cicon-compress::before {
	content: "\e03e";
}
.cicon-credit-card::before {
	content: "\e03f";
}
.cicon-crop::before {
	content: "\e040";
}
.cicon-cry::before {
	content: "\e041";
}
.cicon-cutlery::before {
	content: "\e042";
}
.cicon-delete-link::before {
	content: "\e043";
}
.cicon-desktop::before {
	content: "\e044";
}
.cicon-diary::before {
	content: "\e045";
}
.cicon-difference::before {
	content: "\e046";
}
.cicon-disabled::before {
	content: "\e047";
}
.cicon-disappointed::before {
	content: "\e048";
}
.cicon-distribute-horizontally::before {
	content: "\e049";
}
.cicon-distribute-vertically::before {
	content: "\e04a";
}
.cicon-document::before {
	content: "\e04b";
}
.cicon-donut::before {
	content: "\e04c";
}
.cicon-download::before {
	content: "\e04d";
}
.cicon-drizzle::before {
	content: "\e04e";
}
.cicon-drop-down::before {
	content: "\e04f";
}
.cicon-drop-left::before {
	content: "\e050";
}
.cicon-drop-right::before {
	content: "\e051";
}
.cicon-drop-up::before {
	content: "\e052";
}
.cicon-edit::before {
	content: "\e053";
}
.cicon-eject::before {
	content: "\e054";
}
.cicon-elipsis-h::before {
	content: "\e055";
}
.cicon-elipsis-v::before {
	content: "\e056";
}
.cicon-equalizer::before {
	content: "\e057";
}
.cicon-eraser::before {
	content: "\e058";
}
.cicon-expand::before {
	content: "\e059";
}
.cicon-export::before {
	content: "\e05a";
}
.cicon-eye::before {
	content: "\e05b";
}
.cicon-fantasy-arrows-clockwise::before {
	content: "\e05c";
}
.cicon-fantasy-crown-outline::before {
	content: "\e05d";
}
.cicon-fantasy-chevron::before {
	content: "\e05e";
}
.cicon-fantasy-controls::before {
	content: "\e05f";
}
.cicon-fantasy-crown::before {
	content: "\e060";
}
.cicon-fantasy-farm::before {
	content: "\e061";
}
.cicon-fantasy-filter-enable::before {
	content: "\e062";
}
.cicon-fantasy-search::before {
	content: "\e063";
}
.cicon-fantasy-toggle-disabled::before {
	content: "\e064";
}
.cicon-fantasy-toggle-enabled::before {
	content: "\e065";
}
.cicon-fast-backward::before {
	content: "\e066";
}
.cicon-fast-forward::before {
	content: "\e067";
}
.cicon-feather::before {
	content: "\e068";
}
.cicon-feed::before {
	content: "\e069";
}
.cicon-file-audio::before {
	content: "\e06a";
}
.cicon-file-excel::before {
	content: "\e06b";
}
.cicon-file-image::before {
	content: "\e06c";
}
.cicon-file-movie::before {
	content: "\e06d";
}
.cicon-file-powerpoint::before {
	content: "\e06e";
}
.cicon-file::before {
	content: "\e06f";
}
.cicon-file-word::before {
	content: "\e070";
}
.cicon-file-zip::before {
	content: "\e071";
}
.cicon-filter::before {
	content: "\e072";
}
.cicon-flag::before {
	content: "\e073";
}
.cicon-folder-open::before {
	content: "\e074";
}
.cicon-folder::before {
	content: "\e075";
}
.cicon-fork::before {
	content: "\e076";
}
.cicon-forward::before {
	content: "\e077";
}
.cicon-frowing::before {
	content: "\e078";
}
.cicon-frying-pan::before {
	content: "\e079";
}
.cicon-full-moon::before {
	content: "\e07a";
}
.cicon-gamepad::before {
	content: "\e07b";
}
.cicon-gear::before {
	content: "\e07c";
}
.cicon-gift::before {
	content: "\e07d";
}
.cicon-globe::before {
	content: "\e07e";
}
.cicon-headphone::before {
	content: "\e07f";
}
.cicon-home::before {
	content: "\e080";
}
.cicon-import::before {
	content: "\e081";
}
.cicon-info::before {
	content: "\e082";
}
.cicon-insert-link::before {
	content: "\e083";
}
.cicon-intersect::before {
	content: "\e084";
}
.cicon-italic::before {
	content: "\e085";
}
.cicon-keyboard::before {
	content: "\e086";
}
.cicon-key::before {
	content: "\e087";
}
.cicon-kitchen-cooker::before {
	content: "\e088";
}
.cicon-laptop::before {
	content: "\e089";
}
.cicon-layer::before {
	content: "\e08a";
}
.cicon-layout::before {
	content: "\e08b";
}
.cicon-line-chart::before {
	content: "\e08c";
}
.cicon-link-external::before {
	content: "\e08d";
}
.cicon-link::before {
	content: "\e08e";
}
.cicon-list-bullet::before {
	content: "\e08f";
}
.cicon-list-order::before {
	content: "\e090";
}
.cicon-list-task::before {
	content: "\e091";
}
.cicon-location::before {
	content: "\e092";
}
.cicon-lock::before {
	content: "\e093";
}
.cicon-login::before {
	content: "\e094";
}
.cicon-logout::before {
	content: "\e095";
}
.cicon-loop::before {
	content: "\e096";
}
.cicon-magic::before {
	content: "\e097";
}
.cicon-mail::before {
	content: "\e098";
}
.cicon-map::before {
	content: "\e099";
}
.cicon-mask::before {
	content: "\e09a";
}
.cicon-medal::before {
	content: "\e09b";
}
.cicon-megaphone::before {
	content: "\e09c";
}
.cicon-mention::before {
	content: "\e09d";
}
.cicon-minus::before {
	content: "\e09e";
}
.cicon-mitarashi-dango::before {
	content: "\e09f";
}
.cicon-mobile::before {
	content: "\e0a0";
}
.cicon-money::before {
	content: "\e0a1";
}
.cicon-moon::before {
	content: "\e0a2";
}
.cicon-mouse::before {
	content: "\e0a3";
}
.cicon-music::before {
	content: "\e0a4";
}
.cicon-notice-active::before {
	content: "\e0a5";
}
.cicon-notice-off::before {
	content: "\e0a6";
}
.cicon-notice-on::before {
	content: "\e0a7";
}
.cicon-notice-push::before {
	content: "\e0a8";
}
.cicon-open-mouth::before {
	content: "\e0a9";
}
.cicon-palette::before {
	content: "\e0aa";
}
.cicon-paper-plane::before {
	content: "\e0ab";
}
.cicon-pause::before {
	content: "\e0ac";
}
.cicon-pencil::before {
	content: "\e0ad";
}
.cicon-phone::before {
	content: "\e0ae";
}
.cicon-picture-square::before {
	content: "\e0af";
}
.cicon-picture::before {
	content: "\e0b0";
}
.cicon-pie-chart::before {
	content: "\e0b1";
}
.cicon-pizza::before {
	content: "\e0b2";
}
.cicon-playlist::before {
	content: "\e0b3";
}
.cicon-play::before {
	content: "\e0b4";
}
.cicon-plug::before {
	content: "\e0b5";
}
.cicon-plus::before {
	content: "\e0b6";
}
.cicon-pokeball::before {
	content: "\e0b7";
}
.cicon-pot::before {
	content: "\e0b8";
}
.cicon-print::before {
	content: "\e0b9";
}
.cicon-prototype::before {
	content: "\e0ba";
}
.cicon-question::before {
	content: "\e0bb";
}
.cicon-quote-left::before {
	content: "\e0bc";
}
.cicon-quote-right::before {
	content: "\e0bd";
}
.cicon-rage::before {
	content: "\e0be";
}
.cicon-rainforce::before {
	content: "\e0bf";
}
.cicon-random::before {
	content: "\e0c0";
}
.cicon-remove-cart::before {
	content: "\e0c1";
}
.cicon-rice-cracker::before {
	content: "\e0c2";
}
.cicon-rocket::before {
	content: "\e0c3";
}
.cicon-scale::before {
	content: "\e0c4";
}
.cicon-search-minus::before {
	content: "\e0c5";
}
.cicon-search-plus::before {
	content: "\e0c6";
}
.cicon-search::before {
	content: "\e0c7";
}
.cicon-server::before {
	content: "\e0c8";
}
.cicon-share::before {
	content: "\e0c9";
}
.cicon-shield::before {
	content: "\e0ca";
}
.cicon-shopping-bag::before {
	content: "\e0cb";
}
.cicon-sitemap::before {
	content: "\e0cc";
}
.cicon-smile-alt::before {
	content: "\e0cd";
}
.cicon-smile-heart::before {
	content: "\e0ce";
}
.cicon-smile-plus::before {
	content: "\e0cf";
}
.cicon-smile::before {
	content: "\e0d0";
}
.cicon-snow::before {
	content: "\e0d1";
}
.cicon-speaker::before {
	content: "\e0d2";
}
.cicon-step-backward::before {
	content: "\e0d3";
}
.cicon-step-forward::before {
	content: "\e0d4";
}
.cicon-stop::before {
	content: "\e0d5";
}
.cicon-subtract::before {
	content: "\e0d6";
}
.cicon-sunny-o::before {
	content: "\e0d7";
}
.cicon-sunny::before {
	content: "\e0d8";
}
.cicon-sunrise-o::before {
	content: "\e0d9";
}
.cicon-sunrise::before {
	content: "\e0da";
}
.cicon-sunset::before {
	content: "\e0db";
}
.cicon-sync::before {
	content: "\e0dc";
}
.cicon-table::before {
	content: "\e0dd";
}
.cicon-tablet::before {
	content: "\e0de";
}
.cicon-tag::before {
	content: "\e0df";
}
.cicon-target::before {
	content: "\e0e0";
}
.cicon-terminal::before {
	content: "\e0e1";
}
.cicon-text-align-center::before {
	content: "\e0e2";
}
.cicon-text-align-justify::before {
	content: "\e0e3";
}
.cicon-text-align-left::before {
	content: "\e0e4";
}
.cicon-text-align-right::before {
	content: "\e0e5";
}
.cicon-text-size::before {
	content: "\e0e6";
}
.cicon-ticket::before {
	content: "\e0e7";
}
.cicon-tiled::before {
	content: "\e0e8";
}
.cicon-timeline::before {
	content: "\e0e9";
}
.cicon-tired::before {
	content: "\e0ea";
}
.cicon-tornado::before {
	content: "\e0eb";
}
.cicon-trash::before {
	content: "\e0ec";
}
.cicon-trophy::before {
	content: "\e0ed";
}
.cicon-tumbler-glass::before {
	content: "\e0ee";
}
.cicon-typhoon::before {
	content: "\e0ef";
}
.cicon-umbrella::before {
	content: "\e0f0";
}
.cicon-underline::before {
	content: "\e0f1";
}
.cicon-union::before {
	content: "\e0f2";
}
.cicon-unlock::before {
	content: "\e0f3";
}
.cicon-upload::before {
	content: "\e0f4";
}
.cicon-usb::before {
	content: "\e0f5";
}
.cicon-user-minus::before {
	content: "\e0f6";
}
.cicon-user-plus::before {
	content: "\e0f7";
}
.cicon-users::before {
	content: "\e0f8";
}
.cicon-user::before {
	content: "\e0f9";
}
.cicon-vector::before {
	content: "\e0fa";
}
.cicon-video::before {
	content: "\e0fb";
}
.cicon-vr::before {
	content: "\e0fc";
}
.cicon-wallet::before {
	content: "\e0fd";
}
.cicon-warning::before {
	content: "\e0fe";
}
.cicon-watch-alt::before {
	content: "\e0ff";
}
.cicon-watch::before {
	content: "\e100";
}
.cicon-wind::before {
	content: "\e101";
}
.cicon-wine-glass::before {
	content: "\e102";
}
.cicon-wrench::before {
	content: "\e103";
}
.cicon-yaki-dango::before {
	content: "\e104";
}
.cicon-fantasy-arrow-up::before {
	content: "\e105";
}
.cicon-fantasy-arrow-down::before {
	content: "\e106";
}
.cicon-fantasy-arrow-right::before {
	content: "\e107";
}
.cicon-fantasy-arrow-left::before {
	content: "\e108";
}
.cicon-fantasy-marker-down::before {
	content: "\e109";
}
.cicon-fantasy-marker-up::before {
	content: "\e10a";
}
.cicon-fantasy-marker-left::before {
	content: "\e10b";
}
.cicon-fantasy-marker-right::before {
	content: "\e10c";
}
.cicon-fantasy-chevron-down::before {
	content: "\e10d";
}
.cicon-fantasy-chevron-up::before {
	content: "\e10e";
}
.cicon-fantasy-chevron-left::before {
	content: "\e10f";
}
.cicon-fantasy-chevron-right::before {
	content: "\e110";
}
.cicon-fantasy-radio-button::before {
	content: "\e111";
}
.cicon-fantasy-radio-button-checked::before {
	content: "\e112";
}
.cicon-fantasy-radio-button-transition::before {
	content: "\e113";
}
.cicon-fantasy-toggle-transition::before {
	content: "\e114";
}

/*!********************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js!./styles/shared/containers.css ***!
  \********************************************************************************/
.framed-box-smooth {
	background: var(--background-container);
	border: 2px solid #3c3e4a;
	/* source | slice | width | outset | repeat */
	border-image: url(3960a01ea8e5d196f2eb.svg) 96 / 96px;
	padding: 24px;
}
.framed-box-small-smooth {
	background: var(--background-container);
	border: 2px solid #3c3e4a;
	border-image: url(759d0544a5bd3f21244b.svg) 64 / 64px;
	padding: 16px;
}
.framed-box {
	background: var(--background-container-noisy);
	border: 2px solid #3c3e4a;
	/* source | slice | width | outset | repeat */
	border-image: url(3960a01ea8e5d196f2eb.svg) 96 / 96px;
	padding: 24px;
}
.framed-box-small {
	background: var(--background-container-noisy);
	border: 2px solid #3c3e4a;
	border-image: url(759d0544a5bd3f21244b.svg) 64 / 64px;
	padding: 16px;
}

.rounded-box-smooth {
	background: var(--background-container);
	border: 2px solid #3c3e4a;
	border-radius: 8px;
	padding: 24px;
}

.rounded-box {
	background: var(--background-container-noisy);
	border: 2px solid #3c3e4a;
	border-radius: 8px;
	padding: 24px;
}

/*!****************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js!./styles/shared/screen.css ***!
  \****************************************************************************/
/* Copyright © 2024 Crown Finance Ltd. All Rights Reserved. */
:root {
	--think-different-100vh: 100vh;
	min-height: var(--think-different-100vh);
	background: var(--colour-brand-palette-obsidian);
	/*transform: perspective(100px) translate3d(0px, 0px, -100px);*/
}
/* Using ::before for the background because safari mobile "thinks different" */
.main-background-lazy-load::before {
	display: block;
	content: "\a0";
	position: absolute;
	top: 0;
	left: 0;
	width: 100vw;
	height: var(--think-different-100vh);
	z-index: -2;
	padding: 0;
	margin: 0;
	background: var(--colour-brand-palette-obsidian) url(f29f828fe775480cd23c.jpg) 100% 100% / cover fixed no-repeat;

	box-sizing: border-box;
	border: 16px dashed red;
}
.main-background-lazy-load-2::before {
	display: block;
	content: "\a0";
	position: absolute;
	top: 0;
	left: 0;
	width: 100vw;
	height: var(--think-different-100vh);
	z-index: -2;
	padding: 0;
	margin: 0;
	background: var(--colour-brand-palette-obsidian) url(8d82a3a29e428fa0cc67.jpg) 100% 100% / cover fixed no-repeat;
}
.main-background::before {
	display: block;
	content: "\a0";
	position: absolute;
	top: 0;
	left: 0;
	width: 100vw;
	height: var(--think-different-100vh);
	z-index: -2;
	padding: 0;
	margin: 0;
	background: var(--colour-brand-palette-obsidian) url(12769bf1ec4219e22320.png) 100% 100% / cover fixed no-repeat;
}

.fancy-background-lazy-load::before {
	display: block;
	content: "\a0";
	position: absolute;
	top: 0;
	left: 0;
	width: 100vw;
	height: var(--think-different-100vh);
	z-index: -2;
	padding: 0;
	margin: 0;
	background: var(--colour-brand-palette-obsidian) url(0e6d80a6b18317bd44a5.jpg) 50% 50% / cover fixed no-repeat;
}
.fancy-background-lazy-load-2::before {
	display: block;
	content: "\a0";
	position: absolute;
	top: 0;
	left: 0;
	width: 100vw;
	height: var(--think-different-100vh);
	z-index: -2;
	padding: 0;
	margin: 0;
	background: var(--colour-brand-palette-obsidian) url(cc6bbdbea5a50b87a374.jpg) 50% 50% / cover fixed no-repeat;
}
.fancy-background-lazy-load-3::before {
	display: block;
	content: "\a0";
	position: absolute;
	top: 0;
	left: 0;
	width: 100vw;
	height: var(--think-different-100vh);
	z-index: -2;
	padding: 0;
	margin: 0;
	background:
		url(f61168fa8332267778c5.png) 50% 50% / cover fixed no-repeat,
		url(4ad9ee78a7dd7cbd328f.png) 50% 50% / cover fixed no-repeat,
		url(42a9990f2445c9968309.png) 50% 50% / cover fixed no-repeat,
		url(bfd0dedd68a42c6bfd5d.png) 50% 50% / cover fixed no-repeat,
		var(--colour-brand-palette-obsidian);
}
:root::before {
	position: fixed;
}

:root.fancy-background-lazy-load::after,
:root.fancy-background-lazy-load-2::after,
:root.fancy-background::after {
	position: fixed;
	left: calc(-50vh - var(--fancy-background-pos-x-fraction, 0) * var(--fancy-background-pos-fade-fraction, 0) * 10vh);
	top: -25vh;
	color: var(--colour-brand-palette-gold);
	content: "";
	font-size: 150vh;
	user-select: none;
	pointer-events: none;
	font-family: "crowndings";
	font-synthesis: none;
	line-height: 1;
	opacity: 0.2;
	z-index: -1;
}
@media (max-width: 800px) {
	:root.fancy-background-lazy-load::after,
	:root.fancy-background-lazy-load-2::after,
	:root.fancy-background::after {
		font-size: 110vw;
		left: -5vw;
		top: calc(100vh - 100vw);
	}
}

:root {
	/* needed for the --cursor-window-pos-fade-fraction var to work */
	--cursor-fade-in-time: 0.75s;
	--cursor-fade-out-time: 1.5s;
	--cursor-fade-function: ease-in-out;

	/* Default values so things still render even if the JS didn't load */
	--fancy-background-pos-x-percentage: var(--cursor-window-pos-x-percentage, 0%);
	--fancy-background-pos-y-percentage: var(--cursor-window-pos-y-percentage, 0%);
	--fancy-background-pos-x-fraction: var(--cursor-window-pos-x-fraction, 0);
	--fancy-background-pos-y-fraction: var(--cursor-window-pos-y-fraction, 0);
	--fancy-background-pos-fade-fraction: var(--cursor-window-pos-fade-fraction, 0);
}

:root.fancy-background::before {
	display: block;
	content: "\a0";
	position: fixed;
	top: 0;
	left: 0;
	width: 100vw;
	height: var(--think-different-100vh);
	z-index: -2;
	padding: 0;
	margin: 0;
	
	/* These 2 variables derive everything else below */
	--parallax-bg-scale: 1.1;
	--parallax-bg-offset-max: 10%;

	--parallax-bg-peak-to-peak: calc(var(--parallax-bg-offset-max) * 2);
	--parallax-bg-offset-x: calc(
		calc(
			var(--fancy-background-pos-x-fraction) * var(--parallax-bg-peak-to-peak) - var(--parallax-bg-offset-max)
		) * var(--fancy-background-pos-fade-fraction)
	);
	--parallax-bg-offset-y: calc(
		calc(
			var(--fancy-background-pos-y-fraction) * var(--parallax-bg-peak-to-peak) - var(--parallax-bg-offset-max)
		) * var(--fancy-background-pos-fade-fraction)
	);
	/* Assumes the composited image is at a 2:3 ratio. The y size will be set to "auto". */
	--parallax-bg-x-size: max(calc(100vw * var(--parallax-bg-scale)), calc(100vh * var(--parallax-bg-scale) * 3 / 2));

	/* Last background layer defined is the bottom layer */
	background:
		radial-gradient(
			farthest-corner at
				calc(
					var(--fancy-background-pos-x-percentage) * var(--fancy-background-pos-fade-fraction) +
					calc(75% * calc(1 - var(--fancy-background-pos-fade-fraction)))
				)
				calc(
					var(--fancy-background-pos-y-percentage) * var(--fancy-background-pos-fade-fraction) +
					calc(50% * calc(1 - var(--fancy-background-pos-fade-fraction)))
				),
			var(--colour-primary-800-a0) calc(
					-1000% + min(var(--fancy-background-pos-x-percentage), 60%) * 16.5 * var(--fancy-background-pos-fade-fraction)
			),
			var(--colour-primary-800) 100%
		) fixed,
		url(f61168fa8332267778c5.png)
			/* pos-x */ calc(60% + calc(var(--parallax-bg-offset-x) * 1))
			/* pos-y */ calc(50% - calc(var(--parallax-bg-offset-y) * 1)) /
			/* size-x */ var(--parallax-bg-x-size)
			/* size-y */ auto
			/* attachment */ fixed
			/* repeat*/ no-repeat,
		url(4ad9ee78a7dd7cbd328f.png)
			/* pos-x */ calc(60% + calc(var(--parallax-bg-offset-x) * 0.8))
			/* pos-y */ calc(50% - calc(var(--parallax-bg-offset-y) * 0.8)) /
			/* size-x */ var(--parallax-bg-x-size)
			/* size-y */ auto
			/* attachment */ fixed
			/* repeat*/ no-repeat,
		url(42a9990f2445c9968309.png)
			/* pos-x */ calc(60% + calc(var(--parallax-bg-offset-x) * 0.4))
			/* pos-y */ calc(50% - calc(var(--parallax-bg-offset-y) * 0.4)) /
			/* size-x */ var(--parallax-bg-x-size)
			/* size-y */ auto
			/* attachment */ fixed
			/* repeat*/ no-repeat,
		url(bfd0dedd68a42c6bfd5d.png)
			/* pos-x */ calc(60% + calc(var(--parallax-bg-offset-x) * 0.2))
			/* pos-y */ calc(50% - calc(var(--parallax-bg-offset-y) * 0.2)) /
			/* size-x */ var(--parallax-bg-x-size)
			/* size-y */ auto
			/* attachment */ fixed
			/* repeat*/ no-repeat,
		var(--colour-brand-palette-obsidian);
}

body {
	margin: 0;
}
dialog#main_loading_cover {
	max-width: unset;
	max-height: unset;
	border: unset;
}
dialog#main_loading_cover::backdrop {
	background: none;
}
#main_loading_cover, dialog#main_loading_cover:not([open]) {
	inset: unset !important;
	position: fixed !important;
	top: 0px !important;
	left: 0px !important;
	height: 100vh !important;
	width: 100vw !important;
	margin: 0 !important;
	padding: 0 !important;
	border-radius: unset !important;
	background: var(--colour-primary-800-a50);
	display: flex;
	justify-content: center;
	align-items: center;
	flex-direction: column;
	cursor: wait;
	outline: 100vw solid var(--colour-primary-800-a50);

	transform-origin: center;
	transition: opacity 0.5s ease-in-out, transform 0.5s ease-in-out;
	transform: scale(1);

	overflow: hidden !important;
	z-index: 16777216;
}
@keyframes loading_rotate {
	0% { transform: rotate(0deg); }
	25% { transform: rotate(90deg); }
	50% { transform: rotate(180deg); }
	75% { transform: rotate(270deg); }
	100% { transform: rotate(360deg); }
}
@keyframes loading_offset {
	0% { offset-distance: 0%; }
	25% { offset-distance: 25%; }
	50% { offset-distance: 50%; }
	75% { offset-distance: 75%; }
	100% { offset-distance: 100%; }
}
#main_loading_cover .main_loading_spinner {
	position: relative;
	border: 8px solid transparent;
	border-radius: 50%;
	padding: 24px;
	margin: 16px;
	z-index: 16777217;
}
@media only screen and (max-width: 500px) {
	#main_loading_cover .main_loading_spinner {
		margin: 0;
		transform: scale(0.75);
		transform-origin: center;
	}
}
#main_loading_text {
	line-height: 1em;
	font-size: var(--font-size-h5);
	font-weight: bold;
	padding: 0.2em 0.5em;
	max-width: 95vw;
	margin: 8px;
	text-align: center;
	min-height: 1em;
}

#main_loading_text:not(:empty) {
	background: var(--colour-primary-900);
	border-radius: 4px;
	box-shadow: 0px 0px 2px 0px var(--colour-secondary-500);
}
#main_loading_cover .main_loading_spinner::before {
	display: block;
	content: "\a0";
	position: absolute;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
	border: inherit;
	border-radius: inherit;
	box-sizing: border-box;
	background:
		radial-gradient(var(--colour-primary-700), var(--colour-primary-900)) padding-box,
		conic-gradient(from 90deg, var(--colour-secondary-700-a0) 60deg, var(--colour-secondary-700) 360deg) border-box;
	aspect-ratio: 1 / 1;
	animation: loading_rotate 2.5s linear 0s infinite normal;
}
#main_loading_cover .main_loading_spinner::after {
	position: absolute;
	offset-path: circle(92px at 50% 50%);
	offset-rotate: 0deg;
	content: "\a0";
	background: url(5b18bd234268dd05c6b7.svg) center / auto 100% no-repeat;
	aspect-ratio: 1 / 1;
	height: 42px;
	animation: loading_offset 2.5s linear 0s infinite normal;
}
#main_loading_cover .main_loading_brand {
	font-family: "crowndings";
	font-synthesis: none;
	text-transform: none;
	line-height: 1;
	-webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;

	position: relative; /* Needed to draw above the ::before */
	color: transparent;
	background: var(--linear-gradient-active);
	background-clip: text;
	font-size: 144px;
	width: 144px;
	height: 144px;
}
#main_loading_cover .main_loading_brand::before {
	content: "\e060";
}

#main_loading_cover[inert], dialog#main_loading_cover:not([open])[inert] {
	opacity: 0;
	transform: scale(0.25);
	cursor: unset;
}

/*!************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js!./styles/shared/inputs/toggles.css ***!
  \************************************************************************************/
/* Copyright © 2024 Crown Finance Ltd. All Rights Reserved. */
:root {
	--toggle-size: 24px;
	--toggle-horizontal-margin: 4px;
	--toggle-transition: clip-path 0.1s ease-in-out;
	--toggle-fill-unchecked: var(--colour-secondary-500);
	--toggle-fill-checked: var(--linear-gradient-active);
	--toggle-fill-disabled: var(--colour-neutral-secondary);
	--toggle-char-font: "crowndings";
	/*
	Reference path for toggle-switch
	m 7.4,7.9 // Add 9.2 on "ON"
	
	c -2.2574734,0 -4.1,1.8425266 -4.1,4.1 0,2.257473 1.8425264,4.1 4.1,4.1 2.2574733,0 4.1,-1.842527 4.1,-4.1 0,-2.257474 -1.8425268,-4.1 -4.1,-4.1
	z

	m 0,1.2
	c 1.6088841,0 2.9,1.291783 2.9,2.9 0,1.608884 -1.291116,2.9 -2.9,2.9 -1.6088841,0 -2.9,-1.290725 -2.9,-2.9 0,-1.608885 1.2911157,-2.9 2.9,-2.9
	z

	m 3.7,2.3
	v 1.2
	H 22.4
	c 0.8,0 0.8,-1.2 0,-1.2
	z

	m -9.5,0 // Sub 9.2 on "ON"
	c -0.8,0 -0.8,1.2 0,1.2
	h 2.2 // Add 9.2 here too, ideally we'd make another one of these absolutes but I already spent too much time on this
	v -1.2
	z
	*/
	--toggle-checkbox-path-unchecked: path("m 7.4,7.9c -2.2574734,0 -4.1,1.8425266 -4.1,4.1 0,2.257473 1.8425264,4.1 4.1,4.1 2.2574733,0 4.1,-1.842527 4.1,-4.1 0,-2.257474 -1.8425268,-4.1 -4.1,-4.1zm 0,1.2c 1.6088841,0 2.9,1.291783 2.9,2.9 0,1.608884 -1.291116,2.9 -2.9,2.9 -1.6088841,0 -2.9,-1.290725 -2.9,-2.9 0,-1.608885 1.2911157,-2.9 2.9,-2.9zm 3.7,2.3v 1.2H 22.4c 0.8,0 0.8,-1.2 0,-1.2zm -9.5,0c -0.8,0 -0.8,1.2 0,1.2h 2.2v -1.2z");
	--toggle-checkbox-path-checked: path("m 16.6,7.9c -2.2574734,0 -4.1,1.8425266 -4.1,4.1 0,2.257473 1.8425264,4.1 4.1,4.1 2.2574733,0 4.1,-1.842527 4.1,-4.1 0,-2.257474 -1.8425268,-4.1 -4.1,-4.1zm 0,1.2c 1.6088841,0 2.9,1.291783 2.9,2.9 0,1.608884 -1.291116,2.9 -2.9,2.9 -1.6088841,0 -2.9,-1.290725 -2.9,-2.9 0,-1.608885 1.2911157,-2.9 2.9,-2.9zm 3.7,2.3v 1.2H 22.4c 0.8,0 0.8,-1.2 0,-1.2zm -18.7,0c -0.8,0 -0.8,1.2 0,1.2h 11.4v -1.2z");
	--toggle-checkbox-path-transition: path("m 12,7.9c -2.2574734,0 -4.1,1.8425266 -4.1,4.1 0,2.257473 1.8425264,4.1 4.1,4.1 2.2574733,0 4.1,-1.842527 4.1,-4.1 0,-2.257474 -1.8425268,-4.1 -4.1,-4.1zm 0,1.2c 1.6088841,0 2.9,1.291783 2.9,2.9 0,1.608884 -1.291116,2.9 -2.9,2.9 -1.6088841,0 -2.9,-1.290725 -2.9,-2.9 0,-1.608885 1.2911157,-2.9 2.9,-2.9zm 3.7,2.3v 1.2H 22.4c 0.8,0 0.8,-1.2 0,-1.2zm -14.1,0c -0.8,0 -0.8,1.2 0,1.2h 6.8v -1.2z");
	--toggle-checkbox-char-unchecked: "\e064";
	--toggle-checkbox-char-checked: "\e065";
	--toggle-checkbox-char-transition: "\e114";
	/*
	Reference path for radio button
	m 1.9375,12
	a 10.0625,10.0625 0 1 0 20.125,0 10.0625,10.0625 0 1 0 -20.125,0
	z

	m 18.4375,0
	a 8.375,8.375 0 0 1 -16.75,0 8.375,8.375 0 0 1 16.75,0
	z

	M 12,18.4 9.7,21 12,23.6 14.3,21
	Z

	M 12,12

	// Inner circle, shrink to 0 when unchcked. "5" is radius, "10" is diameter
	m -5,0
	a 5,5 0 1 0 10,0 5,5 0 1 0 -10,0
	z
	*/
	--toggle-radio-path-unchecked: path("m 1.9375,12a 10.0625,10.0625 0 1 0 20.125,0 10.0625,10.0625 0 1 0 -20.125,0zm 18.4375,0a 8.375,8.375 0 0 1 -16.75,0 8.375,8.375 0 0 1 16.75,0zM 12,18.4 9.7,21 12,23.6 14.3,21ZM 12,12m 0,0a 0,0 0 1 0 0,0 0,0 0 1 0 0,0z");
	--toggle-radio-path-checked: path("m 1.9375,12a 10.0625,10.0625 0 1 0 20.125,0 10.0625,10.0625 0 1 0 -20.125,0zm 18.4375,0a 8.375,8.375 0 0 1 -16.75,0 8.375,8.375 0 0 1 16.75,0zM 12,18.4 9.7,21 12,23.6 14.3,21ZM 12,12m -5,0a 5,5 0 1 0 10,0 5,5 0 1 0 -10,0z");
	--toggle-radio-path-transition: path("m 1.9375,12a 10.0625,10.0625 0 1 0 20.125,0 10.0625,10.0625 0 1 0 -20.125,0zm 18.4375,0a 8.375,8.375 0 0 1 -16.75,0 8.375,8.375 0 0 1 16.75,0zM 12,18.4 9.7,21 12,23.6 14.3,21ZM 12,12m -3,0a 3,3 0 1 0 6,0 3,3 0 1 0 -6,0z");
	--toggle-radio-char-unchecked: "\e111";
	--toggle-radio-char-checked: "\e112";
	--toggle-radio-char-transition: "\e113";
}
/*
	First we define styles common to check-boxes and radio-buttons
*/
label:has( > input:where([type="checkbox"], [type="radio"])) {
	color: var(--colour-neutral-primary);
	display: inline-flex;
	align-items: center;
	user-select: none;
}

label > input:where([type="checkbox"], [type="radio"]) {
	position: absolute;
	width: 0;
	height: 0;
	padding: 0;
	margin: 0;
	opacity: 0;
}
label > *:has(+ input:where([type="checkbox"], [type="radio"]))::after,
label:has( > input:where([type="checkbox"], [type="radio"]):only-child)::after {
	margin-left: var(--toggle-horizontal-margin);
}
label > input:first-child:where([type="checkbox"], [type="radio"]) + *::before {
	margin-right: var(--toggle-horizontal-margin);
}

label > input:first-child:where([type="checkbox"], [type="radio"]) + *,
label > *:has(+ input:where([type="checkbox"], [type="radio"])) {
	display: inline-flex;
	align-items: center;
}

label > input:first-child:where([type="checkbox"], [type="radio"]) + *::before,
label > *:has(+ input:where([type="checkbox"], [type="radio"]))::after,
label:has( > input:where([type="checkbox"], [type="radio"]):only-child)::after {
	display: inline-block;
	height: var(--toggle-size);
	width: var(--toggle-size);
	content: "\a0";

	background: var(--toggle-fill-unchecked);
	transition: var(--toggle-transition);
}

label > input:first-child:where([type="checkbox"], [type="radio"]):checked + *::before,
label > *:has(+ input:where([type="checkbox"], [type="radio"]):checked)::after,
label:has( > input:where([type="checkbox"], [type="radio"]):only-child:checked)::after {
	background: var(--toggle-fill-checked);
}

label:is(.invalid-input, .invalid-input *) > input:first-child:where([type="checkbox"], [type="radio"]) + *::before,
label:is(.invalid-input, .invalid-input *) > *:has(+ input:where([type="checkbox"], [type="radio"]))::after,
label:is(.invalid-input, .invalid-input *):has( > input:where([type="checkbox"], [type="radio"]):only-child)::after,
label > input:first-child:where([type="checkbox"], [type="radio"]):invalid + *::before,
label > *:has(+ input:where([type="checkbox"], [type="radio"]):invalid)::after,
label:has( > input:where([type="checkbox"], [type="radio"]):only-child:invalid)::after {
	background: var(--linear-gradient-error);
}

label > input:first-child:where([type="checkbox"], [type="radio"]):disabled + *::before,
label > *:has(+ input:where([type="checkbox"], [type="radio"]):disabled)::after,
label:has( > input:where([type="checkbox"], [type="radio"]):only-child:disabled)::after {
	background: var(--toggle-fill-disabled);
}

label:has( > input:where([type="checkbox"], [type="radio"]):focus-visible) { 
	color: var(--colour-secondary-700);
	outline: 1px solid var(--colour-secondary-500);
	outline-offset: 2px;
}
label:has( > input:where([type="checkbox"], [type="radio"]):invalid:focus-visible),
label:is(.invalid-input, .invalid-input *):has( > input:where([type="checkbox"], [type="radio"]):focus-visible) {
	outline-color: var(--colour-error);
}
label:has( > input:where([type="checkbox"], [type="radio"])):hover { 
	color: var(--colour-secondary-600);
}
/* The redundant :active is _sometimes_ nedded in chromium for some reason */
label:has( > input:where([type="checkbox"], [type="radio"]):active),
label:has( > input:where([type="checkbox"], [type="radio"])):active { 
	color: var(--colour-secondary-700);
}

label:has( > input:where([type="checkbox"], [type="radio"]):disabled) { 
	cursor: not-allowed;
	color: var(--colour-neutral-secondary);
}

label > input:first-child[type="checkbox"] + *::before,
label > *:has(+ input[type="checkbox"])::after,
label:has( > input[type="checkbox"]:only-child)::after {
	clip-path: var(--toggle-checkbox-path-unchecked);
}

label > input:first-child[type="checkbox"]:checked + *::before,
label > *:has(+ input[type="checkbox"]:checked)::after,
label:has( > input[type="checkbox"]:checked:only-child)::after {
	clip-path: var(--toggle-checkbox-path-checked);
}

label > input:first-child[type="checkbox"]:active + *::before,
label > *:has(+ input[type="checkbox"]:active)::after,
label:has( > input[type="checkbox"]:active:only-child)::after,
label:active > input:first-child[type="checkbox"] + *::before,
label:active > *:has(+ input[type="checkbox"])::after,
label:active:has( > input[type="checkbox"]:only-child)::after {
	clip-path: var(--toggle-checkbox-path-transition);

}

label > input:first-child[type="radio"] + *::before,
label > *:has(+ input[type="radio"])::after,
label:has( > input[type="radio"]:only-child)::after {
	clip-path: var(--toggle-radio-path-unchecked);
}

label > input:first-child[type="radio"]:checked + *::before,
label > *:has(+ input[type="radio"]:checked)::after,
label:has( > input[type="radio"]:checked:only-child)::after {
	clip-path: var(--toggle-radio-path-checked);
}

label > input:first-child[type="radio"]:active + *::before,
label > *:has(+ input[type="radio"]:active)::after,
label:has( > input[type="radio"]:active:only-child)::after,
label:active > input:first-child[type="radio"] + *::before,
label:active > *:has(+ input[type="radio"])::after,
label:active:has( > input[type="radio"]:only-child)::after{
	clip-path: var(--toggle-radio-path-transition);
}

/* Scalable varient */
label > input:first-child:where([type="checkbox"], [type="radio"]).scalable + *::before,
label > *:has(+ input:where([type="checkbox"], [type="radio"]).scalable)::after,
label:has( > input:where([type="checkbox"], [type="radio"]).scalable:only-child)::after {
	width: min-content;
	height: min-content;
	background-clip: text;
	font-family: var(--toggle-char-font);
	font-synthesis: none;
	text-transform: none;
	line-height: 1;
	-webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;
	color: transparent;
}
label > *:has(+ input:where([type="checkbox"], [type="radio"]).scalable)::after,
label:has( > input:where([type="checkbox"], [type="radio"]).scalable:only-child)::after {
	margin-left: 0.15em;
}
label > input:first-child:where([type="checkbox"], [type="radio"]).scalable + *::before {
	margin-right: 0.15em;
}

label > input:first-child[type="checkbox"].scalable + *::before,
label > *:has(+ input[type="checkbox"].scalable)::after,
label:has( > input[type="checkbox"].scalable:only-child)::after {
	clip-path: none;
	content: var(--toggle-checkbox-char-unchecked);
}

label > input:first-child[type="checkbox"].scalable:checked + *::before,
label > *:has(+ input[type="checkbox"].scalable:checked)::after,
label:has( > input[type="checkbox"].scalable:checked:only-child)::after {
	clip-path: none;
	content: var(--toggle-checkbox-char-checked);
}

label > input:first-child[type="checkbox"].scalable:active + *::before,
label > *:has(+ input[type="checkbox"].scalable:active)::after,
label:has( > input[type="checkbox"].scalable:active:only-child)::after,
label:active > input:first-child[type="checkbox"].scalable + *::before,
label:active > *:has(+ input[type="checkbox"].scalable)::after,
label:active:has( > input[type="checkbox"].scalable:only-child)::after {
	clip-path: none;
	content: var(--toggle-checkbox-char-transition);
}

label > input:first-child[type="radio"].scalable + *::before,
label > *:has(+ input[type="radio"].scalable)::after,
label:has( > input[type="radio"].scalable:only-child)::after {
	clip-path: none;
	content: var(--toggle-radio-char-unchecked);
}

label > input:first-child[type="radio"].scalable:checked + *::before,
label > *:has(+ input[type="radio"].scalable:checked)::after,
label:has( > input[type="radio"].scalable:checked:only-child)::after {
	clip-path: none;
	content: var(--toggle-radio-char-checked);
}

label > input:first-child[type="radio"].scalable:active + *::before,
label > *:has(+ input[type="radio"].scalable:active)::after,
label:has( > input[type="radio"].scalable:active:only-child)::after,
label:active > input:first-child[type="radio"].scalable + *::before,
label:active > *:has(+ input[type="radio"].scalable)::after,
label:active:has( > input[type="radio"].scalable:only-child)::after {
	clip-path: none;
	content: var(--toggle-radio-char-transition);
}

/*!************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js!./styles/shared/inputs/buttons.css ***!
  \************************************************************************************/
/* Copyright © 2024 Crown Finance Ltd. All Rights Reserved. */
/*
	START: "Generic button"

	Note: "where" is use to have a lower specificity, otherwise it would interfere with the noughtary button and
	fantasy buttons
*/
a.button {
	text-decoration: none;
	color: unset;
}
:where(button, label.button, a.button) {
	border: 2px solid var(--colour-primary-500);
	border-radius: 6px;
	color: var(--colour-neutral-primary);
	background: var(--colour-primary-700);
	font-family: var(--font-family-default);
	padding: 12px 20px;
	font-size: var(--font-size-medium);
	box-sizing: border-box;
	transition: box-shadow 0.1s ease-in-out;
}
:where(button, label.button, a.button):hover:not(:disabled, :has(:disabled)),
:where(button, label.button, a.button):focus-visible:not(:disabled, :has(:disabled)),
:where(button, label.button, a.button):has(:focus-visible):not(:disabled, :has(:disabled)),
:where(button, label.button, a.button):active:not(:disabled, :has(:disabled)) {
	color: var(--colour-secondary-600);
	border-color: transparent;
	background:
		/* Only the bottom layer can be a solid colour, so we're doing this lol */
		linear-gradient(var(--colour-primary-700), var(--colour-primary-700)) padding-box,
		var(--linear-gradient-active) border-box;
}
/*
	This may seem redundant, but sometimes browsers need a little help.
	(Reverting back to `none` on lost focus is inconsistent without this)
*/
:where(button, label.button, a.button):not(:focus, :has(:focus)) {
	box-shadow: none;
}
:where(button, label.button, a.button):active:not(:disabled, :has(:disabled)) {
	box-shadow: inset 0px 0px 30px 1px var(--colour-secondary-900);
}
:where(button, label.button, a.button).small:active:not(:disabled, :has(:disabled)) {
	box-shadow: inset 0px 0px 20px 1px var(--colour-secondary-900);
}
:where(button, label.button, a.button).short:active:not(:disabled, :has(:disabled)) {
	box-shadow: inset 0px 0px 12px 1px var(--colour-secondary-900);
}
:where(button, label.button, a.button):where(:focus, :has(:focus)) {
	box-shadow: inset 0px 0px 24px -12px var(--colour-secondary-900);
}
:where(button, label.button, a.button):focus-visible {
	outline: 1px solid var(--colour-secondary-500);
	outline-offset: 2px;
}

/* START: "Generic button/size variants" */
:where(button, label.button, a.button).short {
	padding: 4px 8px;
	font-size: var(--font-size-small);
}
:where(button, label.button, a.button).small {
	padding: 8px 12px;
	font-size: var(--font-size-small);
}
:where(button, label.button, a.button).large {
	padding: 16px 24px;
	font-size: var(--font-size-large);
}
/* END: "Generic button/size variants" */

/* START: "Generic button/colour variants" */
:where(button, label.button, a.button).primary {
	color: var(--colour-secondary-600);
	border-color: var(--colour-secondary-800-a50);
	background:
		var(--linear-gradient-active-background) border-box,
		var(--colour-primary-900) border-box;
}
:where(button, label.button, a.button).primary:hover:not(:disabled, :has(:disabled)),
:where(button, label.button, a.button).primary:focus-visible:not(:disabled, :has(:disabled)),
:where(button, label.button, a.button).primary:has(:focus-visible):not(:disabled, :has(:disabled)),
:where(button, label.button, a.button).primary:active:not(:disabled, :has(:disabled))  {
	color: var(--colour-secondary-600);
	border-color: transparent;
	background:
		var(--linear-gradient-active-background) padding-box,
		/* Only the bottom layer can be a solid colour, so we're doing this lol */
		linear-gradient(var(--colour-primary-900), var(--colour-primary-900)) padding-box,
		var(--linear-gradient-active) border-box;
}
/*
	:is(button, label.button, a.button).primary:active
	Simply re-use the same active styling from the regular button
*/

:is(button, label.button, a.button).danger {
	color: var(--colour-error);
	border-color: var(--colour-error-a50);
	background:
		var(--linear-gradient-error-background) border-box,
		var(--colour-primary-900) border-box;
}
:where(button, label.button, a.button).danger:hover:not(:disabled, :has(:disabled)),
:where(button, label.button, a.button).danger:focus-visible:not(:disabled, :has(:disabled)),
:where(button, label.button, a.button).danger:has(:focus-visible):not(:disabled, :has(:disabled)),
:where(button, label.button, a.button).danger:active:not(:disabled, :has(:disabled))  {
	color: var(--colour-secondary-600);
	border-color: transparent;
	background:
		var(--linear-gradient-error-background) padding-box,
		/* Only the bottom layer can be a solid colour, so we're doing this lol */
		linear-gradient(var(--colour-primary-900), var(--colour-primary-900)) padding-box,
		var(--linear-gradient-error) border-box;
}
:is(button, label.button, a.button).danger:active:not(:disabled, :has(:disabled)) {
	color: var(--colour-neutral-primary);
	box-shadow: inset 0px 0px 30px 1px var(--colour-error);
}
:is(button, label.button, a.button).danger.small:active:not(:disabled, :has(:disabled)) {
	box-shadow: inset 0px 0px 20px 1px var(--colour-error);
}
:is(button, label.button, a.button).danger.short:active:not(:disabled, :has(:disabled)) {
	box-shadow: inset 0px 0px 12px 1px var(--colour-error);
}
:is(button, label.button, a.button).danger:where(:focus, :has(:focus)) {
	box-shadow: inset 0px 0px 24px -12px var(--colour-error);
}

:is(button, label.button, a.button).warning {
	color: var(--colour-warning);
	border-color: var(--colour-warning-a50);
	background:
		var(--linear-gradient-warning-background) border-box,
		var(--colour-primary-900) border-box;
}
:where(button, label.button, a.button).warning:hover:not(:disabled, :has(:disabled)),
:where(button, label.button, a.button).warning:focus-visible:not(:disabled, :has(:disabled)),
:where(button, label.button, a.button).warning:has(:focus-visible):not(:disabled, :has(:disabled)),
:where(button, label.button, a.button).warning:active:not(:disabled, :has(:disabled))  {
	color: var(--colour-secondary-600);
	border-color: transparent;
	background:
		var(--linear-gradient-warning-background) padding-box,
		/* Only the bottom layer can be a solid colour, so we're doing this lol */
		linear-gradient(var(--colour-primary-900), var(--colour-primary-900)) padding-box,
		var(--linear-gradient-warning) border-box;
}
:is(button, label.button, a.button).warning:active:not(:disabled, :has(:disabled)) {
	color: var(--colour-neutral-primary);
	box-shadow: inset 0px 0px 30px 1px var(--colour-warning);
}
:is(button, label.button, a.button).warning.small:active:not(:disabled, :has(:disabled)) {
	box-shadow: inset 0px 0px 20px 1px var(--colour-warning);
}
:is(button, label.button, a.button).warning.short:active:not(:disabled, :has(:disabled)) {
	box-shadow: inset 0px 0px 12px 1px var(--colour-warning);
}
:is(button, label.button, a.button).warning:where(:focus, :has(:focus)) {
	box-shadow: inset 0px 0px 24px -12px var(--colour-warning);
}

:is(button, label.button, a.button).success {
	color: var(--colour-success);
	border-color: var(--colour-success-a50);
	background:
		var(--linear-gradient-success-background) border-box,
		var(--colour-primary-900) border-box;
}
:where(button, label.button, a.button).success:hover:not(:disabled, :has(:disabled)),
:where(button, label.button, a.button).success:focus-visible:not(:disabled, :has(:disabled)),
:where(button, label.button, a.button).success:has(:focus-visible):not(:disabled, :has(:disabled)),
:where(button, label.button, a.button).success:active:not(:disabled, :has(:disabled))  {
	color: var(--colour-secondary-600);
	border-color: transparent;
	background:
		var(--linear-gradient-success-background) padding-box,
		/* Only the bottom layer can be a solid colour, so we're doing this lol */
		linear-gradient(var(--colour-primary-900), var(--colour-primary-900)) padding-box,
		var(--linear-gradient-success) border-box;
}
:is(button, label.button, a.button).success:active:not(:disabled, :has(:disabled)) {
	color: var(--colour-neutral-primary);
	box-shadow: inset 0px 0px 30px 1px var(--colour-success);
}
:is(button, label.button, a.button).success.small:active:not(:disabled, :has(:disabled)) {
	box-shadow: inset 0px 0px 20px 1px var(--colour-success);
}
:is(button, label.button, a.button).success.short:active:not(:disabled, :has(:disabled)) {
	box-shadow: inset 0px 0px 12px 1px var(--colour-success);
}
:is(button, label.button, a.button).success:where(:focus, :has(:focus)) {
	box-shadow: inset 0px 0px 24px -12px var(--colour-success);
}

/* END: "Generic button/colour variants" */

/* START: "Generic button/toggleable */
label.button:has( > input:is([type="checkbox"], [type="radio"])) {
	justify-content: space-between;
}
label.button > input:first-child:where([type="checkbox"], [type="radio"]) + *::before,
label.button > *:has(+ input:where([type="checkbox"], [type="radio"]))::after,
label.button:has( > input:where([type="checkbox"], [type="radio"]):only-child)::after {
	background-image: none;
	/* "color" is used just in case the ".scalable" varient is being used */
	color: var(--colour-neutral-secondary);
	background-color: currentcolor;
}
label.button > input:first-child:where([type="checkbox"], [type="radio"]):checked + *::before,
label.button > *:has(+ input:where([type="checkbox"], [type="radio"]):checked)::after,
label.button:has( > input:where([type="checkbox"], [type="radio"]):only-child:checked)::after {
	/* Use the colour of the text */
	background-image: none;
	color: inherit;
}
label.button:has( > input:is([type="checkbox"], [type="radio"]).scalable:last-child) {
	padding-right: 0.4em;
}
label.button > *:nth-last-child(2):has(+ input:where([type="checkbox"], [type="radio"]).scalable)::after,
label.button:has( > input:where([type="checkbox"], [type="radio"]).scalable:only-child)::after {
	margin-left: 0.6em;
}
label.button:has( > input:is([type="checkbox"], [type="radio"]):not(.scalable):last-child) {
	padding-right: 8px;
}
label.button > *:nth-last-child(2):has(+ input:where([type="checkbox"], [type="radio"]):not(.scalable))::after,
label.button:has( > input:where([type="checkbox"], [type="radio"]):not(.scalable):only-child)::after {
	margin-left: 12px;
}
label.button.short:has( > input:is([type="checkbox"], [type="radio"]):not(.scalable)) {
	/* The checkbox has a fixed size, so we gotta decrease the top/bottom padding */
	padding-top: 0px;
	padding-bottom: 0px;
	padding-right: 3px;
}
label.button.short > *:nth-last-child(2):has(+ input:where([type="checkbox"], [type="radio"]):not(.scalable))::after,
label.button.short:has( > input:where([type="checkbox"], [type="radio"]):not(.scalable):only-child)::after {
	margin-left: 5px;
}
label.button.small:has( > input:is([type="checkbox"], [type="radio"]):not(.scalable)) {
	/* The checkbox has a fixed size, so we gotta decrease the top/bottom padding */
	padding-top: 4px;
	padding-bottom: 4px;
	padding-right: 5px;
}
label.button.small > *:nth-last-child(2):has(+ input:where([type="checkbox"], [type="radio"]):not(.scalable))::after,
label.button.small:has( > input:where([type="checkbox"], [type="radio"]):not(.scalable):only-child)::after {
	margin-left: 7px;
}
label.button.large:has( > input:is([type="checkbox"], [type="radio"]):not(.scalable):last-child) {
	padding-right: 10px;
}
label.button.large > *:nth-last-child(2):has(+ input:where([type="checkbox"], [type="radio"]):not(.scalable))::after,
label.button.large:has( > input:where([type="checkbox"], [type="radio"]):not(.scalable):only-child)::after {
	margin-left: 14px;
}
/* END: "Generic button/toggleable */
:is(button, label.button, a.button):is(:disabled, :has(:disabled)) {
	color: var(--colour-neutral-primary);
	cursor: not-allowed;
	filter: grayscale(0.8) contrast(0.8) brightness(0.7);
}
/* END: "Generic button" */

/* START: "Fancy Circle Button" */
:where(button, label.button, a.button).fantasy-circular {
	position: relative;
	border: 2px solid transparent;

	color: var(--colour-secondary-800);
	font-family: var(--font-family-default);
	border-radius: 50%;
	padding: 0.1em;
	font-size: var(--icon-size-normal);
	aspect-ratio: 1 / 1;
	display: inline-flex;
	justify-content: center;
	align-items: center;
	background:
		linear-gradient(var(--colour-primary-700), var(--colour-primary-700)) padding-box,
		var(--conic-gradient-active) border-box;
}
:where(button, label.button, a.button).fantasy-circular::after {
	position: absolute;
	content: " ";
	background: url(5b18bd234268dd05c6b7.svg) 50% 50% / auto 100% scroll no-repeat;
	aspect-ratio: 1 / 1;
	height: 30%;
	bottom: -15%;
}
:where(button, label.button, a.button).fantasy-circular:is(:focus, :has(:focus)) {
	box-shadow: inset 0px 0px 24px -14px var(--colour-secondary-900);
	background:
		linear-gradient(var(--colour-primary-700), var(--colour-primary-700)) padding-box,
		var(--conic-gradient-active) border-box;
}
:where(button, label.button, a.button).fantasy-circular:hover {
	box-shadow: inset 0px 0px 24px -12px var(--colour-secondary-900);
	background:
		linear-gradient(var(--colour-primary-700), var(--colour-primary-700)) padding-box,
		var(--conic-gradient-active) border-box;
}
:where(button, label.button, a.button).fantasy-circular:active:not(:disabled, :has(:disabled)) {
	box-shadow: inset 0px 0px 30px 1px var(--colour-secondary-900);
	background:
		linear-gradient(var(--colour-primary-700), var(--colour-primary-700)) padding-box,
		var(--conic-gradient-active) border-box;
}
:where(button, label.button, a.button).fantasy-circular.success::after {
	filter: hue-rotate(40deg)
}
:where(button, label.button, a.button).fantasy-circular.danger::after {
	filter: hue-rotate(315deg)
}
:is(button, label.button, a.button).fantasy-circular:is(:disabled, :has(:disabled)) {
	box-shadow: none;
	/* child elements etc. because I'm lazy rn */
	filter: grayscale(1);
	background:
		var(--linear-gradient-button-disabled-fill) padding-box,
		var(--conic-gradient-disabled) border-box;
}
/* END: "Fancy Circle Button" */

/* START: "Fantasy Button" */
:where(button, label.button, a.button).fantasy {
	z-index: 0;
	position: relative;
	font-family: var(--font-family-fantasy);
	font-size: 18px;
	line-height: 1em;
	border: 1px solid;
	border-left-width: 1.5px;
	border-right-width: 1.5px;
	border-radius: 27px / 21px;
	/* the ::after element will actually render the border */
	border-color: transparent !important;
	padding: 0px 22px;
	min-height: 42px;
	margin: 0px 0px;
	
	display: inline-flex;
	justify-content: center;
	align-items: center;
	text-wrap: nowrap;

	/* the ::before element will play the role of background */
	background: none !important;
	box-shadow: none !important;
	
}
label.button.fantasy:has( > input:is([type="checkbox"], [type="radio"]):not(.specjhfjhkfajhksfkjh):last-child)  {
	padding-right: 18px;
}
:where(button, label.button, a.button).fantasy::before {
	display: block;
	content: "\a0";
	position: absolute;
	z-index: -1;
	/* The clip-path was defined using the parent element as a reference, so we gotta compensate the sizing for that. */
	left: -1.5px;
	right: 0px;
	width: calc(100%);
	height: calc(100%);
	box-sizing: content-box;
	border: inherit;
	border-radius: inherit;
	border-color: transparent;
	/* ViewPort: 0 0 112 42 */
	clip-path: polygon(
		27.118px calc(100% *  0.500 / 42),
		18.626px calc(100% *  2.441 / 42),
		11.756px calc(100% *  7.859 / 42),
		1.000px  calc(100% * 21.000 / 42),
		12.268px calc(100% * 34.667 / 42),
		18.882px calc(100% * 39.822 / 42),
		27.118px calc(100% * 41.500 / 42),
		calc(100% - calc(112px - 85.382px))  calc(100% * 41.500 / 42),
		calc(100% - calc(112px - 93.457px))  calc(100% * 39.820 / 42),
		calc(100% - calc(112px - 99.948px))  calc(100% * 34.667 / 42),
		calc(100% - calc(112px - 111.000px)) calc(100% * 21.000 / 42),
		calc(100% - calc(112px - 100.450px)) calc(100% *  7.859 / 42),
		calc(100% - calc(112px - 93.714px))  calc(100% *  2.438 / 42),
		calc(100% - calc(112px - 85.382px))  calc(100% *  0.500 / 42)
	);
	/*box-shadow: inset 0px 0px 24px -12px var(--colour-success);*/
	background: var(--colour-primary-800);
	box-shadow: none;
	transition: box-shadow 0.1s ease-in-out;
}

:where(button, label.button, a.button).fantasy::after {
	z-index: 0;
	position: absolute;
	left: -1.5px;
	width: 100%;
	height: 100%;
	display: block;
	border: inherit;
	border-radius: inherit;
	content: "\a0";
	border-image:
		/* -source */
		url(118fe6131d8ce5ead6eb.svg)
		/* -slice (top, right, bottom, left) */
		19 27 19 27 /
		/* -width (top, right, bottom, left) */
		19px 27px
		/* -repeat (x, y) */
		stretch stretch;
}

:where(button, label.button, a.button).fantasy:is(:hover, :focus-visible, :active):not(:disabled)::after,
:where(button, label.button, a.button).fantasy:has(:hover, :focus-visible, :active):not(:disabled)::after {
	border-image-source: url(118fe6131d8ce5ead6eb.svg#active);
}
:where(button, label.button, a.button).fantasy:not(:disabled, :has(:disabled)):active::before {
	box-shadow: inset 0px 0px 30px 1px var(--colour-secondary-900);
}
:where(button, label.button, a.button).fantasy:not(:active):where(:focus, :has(:focus))::before {
	box-shadow: inset 0px 0px 24px -14px var(--colour-secondary-900);
}
:where(button, label.button, a.button).fantasy:hover:not(:disabled, :has(:disabled, :active), :active)::before {
	box-shadow: inset 0px 0px 24px -10px var(--colour-secondary-900);
}
:where(button, label.button, a.button).fantasy.primary {
	color: var(--colour-neutral-primary);
}
:where(button, label.button, a.button).fantasy.primary::after {
	border-image-source: url(118fe6131d8ce5ead6eb.svg#active);
}

:is(button, label.button, a.button).fantasy.danger::before {
	background:
		var(--linear-gradient-error-background) padding-box,
		var(--colour-primary-900);
}
:where(button, label.button, a.button).fantasy.danger:is(:focus, :has(:focus)):not(:disabled, :has(:disabled))::before {
	box-shadow: inset 0px 0px 24px -12px var(--colour-error);
}
:where(button, label.button, a.button).fantasy.danger:hover:not(:disabled, :has(:disabled))::before {
	box-shadow: inset 0px 0px 24px -8px var(--colour-error);
}
:where(button, label.button, a.button).fantasy.danger:active:not(:disabled, :has(:disabled))::before {
	box-shadow: inset 0px 0px 30px 0px var(--colour-error);
}
:is(button, label.button, a.button).fantasy.danger::after {
	border-image-source: url(118fe6131d8ce5ead6eb.svg#danger);
}

:is(button, label.button, a.button).fantasy.warning::before {
	background:
		var(--linear-gradient-warning-background) padding-box,
		var(--colour-primary-900);
}
:where(button, label.button, a.button).fantasy.warning:is(:focus, :has(:focus)):not(:disabled, :has(:disabled))::before {
	box-shadow: inset 0px 0px 24px -12px var(--colour-warning);
}
:where(button, label.button, a.button).fantasy.warning:hover:not(:disabled, :has(:disabled))::before {
	box-shadow: inset 0px 0px 24px -8px var(--colour-warning);
}
:where(button, label.button, a.button).fantasy.warning:active:not(:disabled, :has(:disabled))::before {
	box-shadow: inset 0px 0px 30px 0px var(--colour-warning);
}
:is(button, label.button, a.button).fantasy.warning::after {
	border-image-source: url(118fe6131d8ce5ead6eb.svg#warning);
}

:is(button, label.button, a.button).fantasy.success::before {
	background:
		var(--linear-gradient-success-background) padding-box,
		var(--colour-primary-900);
}
:where(button, label.button, a.button).fantasy.success:is(:focus, :has(:focus)):not(:disabled, :has(:disabled))::before {
	box-shadow: inset 0px 0px 24px -12px var(--colour-success);
}
:where(button, label.button, a.button).fantasy.success:hover:not(:disabled, :has(:disabled))::before {
	box-shadow: inset 0px 0px 24px -8px var(--colour-success);
}
:where(button, label.button, a.button).fantasy.success:active:not(:disabled, :has(:disabled))::before {
	box-shadow: inset 0px 0px 30px 0px var(--colour-success);
}
:is(button, label.button, a.button).fantasy.success::after {
	border-image-source: url(118fe6131d8ce5ead6eb.svg#success);
}

/* this was :is(:disabled, :has(:disabled) but it seems like some browsers don't like it if you have lots of :is() */
:is(button, label.button, a.button).fantasy:has(:disabled),
:is(button, label.button, a.button).fantasy:disabled {
	filter: grayscale(1);
}

:is(button, label.button, a.button).fantasy:disabled::before,
:is(button, label.button, a.button).fantasy:has(:disabled)::before {
	background:
		var(--linear-gradient-button-disabled-fill)
}
:is(button, label.button, a.button).fantasy:disabled::after,
:is(button, label.button, a.button).fantasy:has(:disabled)::after {
	border-image-source: url(118fe6131d8ce5ead6eb.svg#disabled);
}
/* Random stuff that hopefully hints at the browser to reset things. */
:where(button, label.button, a.button).fantasy:not(:focus, :has(:focus))::before {
	border-image-source: unset;
	box-shadow: none;
}
:where(button, label.button, a.button).fantasy:not(:focus, :has(:focus))::after {
	border-color: unset;
	box-shadow: none;
}



/* START: "Fantasy Ornamental Button" */
:where(button, label.button, a.button).fantasy-ornamental {
	z-index: 0;
	position: relative;
	font-family: var(--font-family-fantasy);
	font-size: 22px;
	line-height: 1em;
	border: 1px solid;
	border-top-width: 1px;
	border-left-width: 15px;
	border-right-width: 15px;
	border-bottom-width: 5px;
	border-radius: 42px / 26px;
	padding: 0px 28px;
	margin: 0px 0px;
	min-height: 52px;

	display: inline-flex;
	justify-content: center;
	align-items: center;
	text-wrap: nowrap;

	/* the ::before element will play the role of background */
	background: none !important;
	box-shadow: none !important;
	border-color: transparent !important;
}
label.button.fantasy-ornamental:has( > input:is([type="checkbox"], [type="radio"]):not(.specificity-is-amazing-yay):last-child)  {
	padding-right: 28px;
}
:where(button, label.button, a.button).fantasy-ornamental::before {
	position: absolute;
	z-index: -1;
	/* The clip-path was defined using the parent element as a reference, so we gotta compensate the sizing for that. */
	left: -15px;
	top: -1px;
	width: 100%;
	height: 100%;
	display: block;
	content: "\a0";
	box-shadow: none;
	border: inherit;
	border-radius: inherit;
	border-color: transparent;
	/* ViewPort: 0 0 174 52 */
	clip-path: polygon(
		41.240px calc(100% *  0.529 / 52),
		32.985px calc(100% *  2.882 / 52),
		26.289px calc(100% *  8.885 / 52),
		15.320px  calc(100% * 23.977 / 52),
		26.289px calc(100% * 39.057 / 52),
		32.985px calc(100% * 45.060 / 52),
		41.240px calc(100% * 47.412 / 52),
		calc(100% - calc(174px - 132.760px)) calc(100% * 47.439 / 52),
		calc(100% - calc(174px - 141.019px)) calc(100% * 45.086 / 52),
		calc(100% - calc(174px - 147.711px)) calc(100% * 39.080 / 52),
		calc(100% - calc(174px - 158.680px)) calc(100% * 23.980 / 52),
		calc(100% - calc(174px - 147.711px)) calc(100% *  8.891 / 52),
		calc(100% - calc(174px - 141.019px)) calc(100% *  2.884 / 52),
		calc(100% - calc(174px - 132.760px)) calc(100% *  0.529 / 52)
	);
	background: var(--linear-gradient-button-fill);
	transition: box-shadow 0.1s ease-in-out;
}
:where(button, label.button, a.button).fantasy-ornamental::after {
	position: absolute;
	z-index: 0;
	/* The clip-path was defined using the parent element as a reference, so we gotta compensate the sizing for that. */
	left: -15px;
	top: -1px;
	width: 100%;
	height: 100%;
	display: block;
	content: "\a0";
	box-shadow: none;
	border: inherit;
	border-radius: inherit;
	border-image:
		/* -source */
		url(c68540e1ea6b45ff77c1.svg#active)
		/* -slice (top, right, bottom, left) */
		24 43 28 43 /
		/* -width (top, right, bottom, left) */
		24px 43px 28px 43px
		/* -repeat (x, y) */
		stretch stretch;
	/*background: #ff000088;*/
}
:where(button, label.button, a.button).fantasy-ornamental:is(:focus, :has(:focus)):not(:disabled, :has(:disabled))::before {
	box-shadow: inset 0px 0px 24px -12px var(--colour-secondary-900);
}
:where(button, label.button, a.button).fantasy-ornamental:hover:not(:disabled, :has(:disabled))::before {
	box-shadow: inset 0px 0px 24px -8px var(--colour-secondary-900);
}
:where(button, label.button, a.button).fantasy-ornamental:active:not(:disabled, :has(:disabled))::before {
	box-shadow: inset 0px 0px 30px 0px var(--colour-secondary-900);
}

:is(button, label.button, a.button).fantasy-ornamental.danger::before {
	background:
		var(--linear-gradient-error-background) padding-box,
		var(--colour-primary-900);
}
:is(button, label.button, a.button).fantasy-ornamental.danger::after {
	border-image-source: url(c68540e1ea6b45ff77c1.svg#danger);
}
:where(button, label.button, a.button).fantasy-ornamental.danger:is(:focus, :has(:focus)):not(:disabled, :has(:disabled))::before {
	box-shadow: inset 0px 0px 24px -12px var(--colour-error);
}
:where(button, label.button, a.button).fantasy-ornamental.danger:hover:not(:disabled, :has(:disabled))::before {
	box-shadow: inset 0px 0px 24px -8px var(--colour-error);
}
:where(button, label.button, a.button).fantasy-ornamental.danger:active:not(:disabled, :has(:disabled))::before {
	box-shadow: inset 0px 0px 30px 0px var(--colour-error);
}

:is(button, label.button, a.button).fantasy-ornamental.warning::before {
	background:
		var(--linear-gradient-warning-background) padding-box,
		var(--colour-primary-900);
}
:is(button, label.button, a.button).fantasy-ornamental.warning::after {
	border-image-source: url(c68540e1ea6b45ff77c1.svg#warning);
}
:where(button, label.button, a.button).fantasy-ornamental.warning:is(:focus, :has(:focus)):not(:disabled, :has(:disabled))::before {
	box-shadow: inset 0px 0px 24px -12px var(--colour-warning);
}
:where(button, label.button, a.button).fantasy-ornamental.warning:hover:not(:disabled, :has(:disabled))::before {
	box-shadow: inset 0px 0px 24px -8px var(--colour-warning);
}
:where(button, label.button, a.button).fantasy-ornamental.warning:active:not(:disabled, :has(:disabled))::before {
	box-shadow: inset 0px 0px 30px 0px var(--colour-warning);
}

:is(button, label.button, a.button).fantasy-ornamental.success::before {
	background:
		var(--linear-gradient-success-background) padding-box,
		var(--colour-primary-900);
}
:is(button, label.button, a.button).fantasy-ornamental.success::after {
	border-image-source: url(c68540e1ea6b45ff77c1.svg#success);
}
:where(button, label.button, a.button).fantasy-ornamental.success:is(:focus, :has(:focus)):not(:disabled, :has(:disabled))::before {
	box-shadow: inset 0px 0px 24px -12px var(--colour-success);
}
:where(button, label.button, a.button).fantasy-ornamental.success:hover:not(:disabled, :has(:disabled))::before {
	box-shadow: inset 0px 0px 24px -8px var(--colour-success);
}
:where(button, label.button, a.button).fantasy-ornamental.success:active:not(:disabled, :has(:disabled))::before {
	box-shadow: inset 0px 0px 30px 0px var(--colour-success);
}

/* Random stuff that hopefully hints at the browser to reset things. */
:where(button, label.button, a.button).fantasy-ornamental:not(:focus, :has(:focus))::before {
	border-image-source: unset;
	box-shadow: none;
}
:where(button, label.button, a.button).fantasy-ornamental:not(:focus, :has(:focus))::after {
	border-color: unset;
	box-shadow: none;
}

:is(button, label.button, a.button).fantasy-ornamental:disabled,
:is(button, label.button, a.button).fantasy-ornamental:has(:disabled) {
	filter: grayscale(1);
}
:is(button, label.button, a.button).fantasy-ornamental:disabled::before,
:is(button, label.button, a.button).fantasy-ornamental:has(:disabled)::before {
	background:
		var(--linear-gradient-button-disabled-fill)
}
:is(button, label.button, a.button).fantasy-ornamental:disabled::after,
:is(button, label.button, a.button).fantasy-ornamental:has(:disabled)::after {
	border-image-source: url(c68540e1ea6b45ff77c1.svg#disabled);
}

label.button:is(.fantasy, .fantasy-ornamental):not(.danger, .warning, .success) > input:checked:first-child:where([type="checkbox"], [type="radio"]) + *::before,
label.button:is(.fantasy, .fantasy-ornamental):not(.danger, .warning, .success) > *:has(+ input:checked:where([type="checkbox"], [type="radio"]))::after,
label.button:is(.fantasy, .fantasy-ornamental):not(.danger, .warning, .success):has( > input:checked:where([type="checkbox"], [type="radio"]):only-child)::after {
	background-image: var(--toggle-fill-checked);
}

/*
	START: "Noughtary Button"

	The noughtary button is only for places where a primary button isn't grandiose enough
*/
:is(button, a).noughtary {
	display: inline-flex;
	justify-content: center;
	align-items: center;
	margin: 0px 24px;
	border-style: solid;
	border-color: var(--colour-brand-palette-gold);
	border-width: 6px;
	border-image:
		/* -source */
		url(dcbfb4136d79ea473777.svg)
		/* -slice (top, right, bottom, left) */
		32 50 32 50 /
		/* -width (top, right, bottom, left) */
		48px 75px
		/* -repeat (x, y) */
		stretch repeat
		;
	border-image-outset: 0px 24px;
	height: 96px;
	background: linear-gradient(0deg, #524036 0%, #523C31 52.54%, #524738 89.87%, #524A42 100%) padding-box;
	border-radius: 32px;
	transition: all 0.1s ease-in-out;
	padding: 4px 48px;
	box-sizing: border-box;
	font-size: var(--font-size-h2);
	text-align: center;
	text-decoration: none;
}

:is(button, a).noughtary:is(:hover, :active, :focus-visible) {
	border-image-source: url(dcbfb4136d79ea473777.svg#layer_highlight)
}
:is(button, a).noughtary:is(:hover, :focus-visible)  {
	background-image: linear-gradient(0deg, #91715F 0.2%, #936B58 52.54%, #8E7B61 89.87%, #8A7D6F 100%);
	filter: drop-shadow(0px 0px 15px rgba(247, 166, 101, 0.20)); 
}
:is(button, a).noughtary:active {
	box-shadow: inset 0px 0px 48px 8px var(--colour-secondary-700);
}
:is(button, a).noughtary:focus-visible {
	outline: 0px solid var(--colour-secondary-500);
}

/*
	I wasted too many hours trying to make the noughtary button responsive. It cannot be done with current CSS
	technology. That said, since it's not going to be used outside of home-pages anyway, it's probably OK to scale
*/
@media only screen and (max-width: 1000px) {
	:is(button, a).noughtary {
		padding: 4px 32px;
	}
}
@media only screen and (max-width: 800px) {
	:is(button, a).noughtary {
		font-size: var(--font-size-h4);
		margin: 0px 16px;
		border-width: 4px;
		border-image-width: 32px 50px;
		border-image-outset: 0px 16px;
		height: 64px;
		border-radius: 24px;
		padding: 2px 24px;
	}
}
@media only screen and (max-width: 600px) {
	:is(button, a).noughtary {
		font-size: var(--font-size-h6);
	}
}
/* END: "Noughtary Button" */

/*!***********************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js!./styles/shared/inputs/slider.css ***!
  \***********************************************************************************/
/* Copyright © 2024 Crown Finance Ltd. All Rights Reserved. */
/* Since range inputs are weirdly hard to style,  */
input[type="range"] {
	background: none;
	position: relative; /* needed for track width: 100% */
    appearance: none;
	outline: none;
	/* The invisible border increases the click area. */
	/* People (or at least I) expect for the clickable area of the slider to have the height of the thumb */
	--range-track-border-width: 8px;
	--range-track-border-style: solid;
	--range-track-border-color: #ffffff00;
	--range-track-background: var(--colour-primary-500) content-box;
	--range-track-height: 4px;
	--range-track-width: 100%;
	/*
		TODO: Making the progress have a rounded end is broken at the moment
		* In order to be consistent accross browsers, the range input must have a left/right border width of 0px.
		* The sliders have a top/bottom border height of 8px in order to increase the clickable area.
		* This means border-radious is out of the question
		* Using clip-path on the track works in firefox, (along with some z-index fuckery) but on chrome, the thumb is
		  a child of the track, which means the thumb would get clipped out as well.
		
		Most recent idea to get this working on chromium is to have a clip-path with a cut-out for the thumb that moves
		according to the --range-workaround-fill-amount variable, but that's not important right now.

		-------

		No, you moron, just abuse elliptical borders... I'm keeping the comment above to showcase my tendency to over-
		think things to the world. 
	*/
	--range-track-border-radius: 2px / 10px;

	--range-progress-background: var(--colour-secondary-800);
	--range-progress-height: 4px;
	--range-progress-border-radius: 2px;

	--range-thumb-background: conic-gradient(from 225deg at 50% 50%, var(--colour-primary-700), var(--colour-primary-700-a0)) content-box, var(--colour-secondary-800) content-box;
	--range-thumb-height: 16px;
	--range-thumb-width: 16px;
	--range-thumb-border-radius: 0px;
	--range-thumb-outline-width: 0px;
	--range-thumb-outline-style: solid;
	--range-thumb-outline-color: var(--colour-secondary-500);
	--range-thumb-transform: rotate(-45deg);
	
	--range-track-outline-width: 0px;
	--range-track-outline-style: solid;
	--range-track-outline-color: var(--colour-secondary-500);

	--range-workaround-fill-amount: 0;
}
.range-input-marker {
	color: var(--colour-secondary-800);
	opacity: 0.5;
}

input[type="range"]:is(:active, :focus-visible):not(:disabled) {
	--range-thumb-outline-width: 1px;
	--range-thumb-background: conic-gradient(from 225deg at 50% 50%, var(--colour-secondary-500) 0deg, var(--colour-primary-700-a0) 360deg) content-box, var(--colour-secondary-800) content-box; 
	--range-progress-background: var(--linear-gradient-active);
}
input[type="range"]:focus-visible:not(:disabled) {
	--range-track-outline-width: 1px;
}

input[type="range"]:is(:invalid, .invalid-input, .invalid-input *):not(:disabled) {
	--range-progress-background: var(--linear-gradient-error-background);
	--range-track-outline-color: var(--colour-error);
}
input[type="range"]:is(:invalid, .invalid-input, .invalid-input *):is(:active, :focus-visible):not(:disabled) {
	--range-progress-background: var(--linear-gradient-error);
}
input[type="range"]:disabled {
	cursor: not-allowed;
	--range-thumb-height: 12px;
	--range-thumb-width: 12px;
	--range-thumb-background: color-mix(in srgb, var(--colour-secondary-500), transparent 60%);
	--range-progress-background: var(--colour-neutral-secondary);
}

/* Browser-specific implemetations below (firefox, chromium, safari) */
input[type="range"]::-webkit-slider-runnable-track {
	appearance: none;
	border-width: var(--range-track-border-width) 0px;
	border-style: var(--range-track-border-style);
	border-color: var(--range-track-border-color);
	border-radius: var(--range-track-border-radius);
	outline-width: var(--range-track-outline-width);
	outline-style: var(--range-track-outline-style);
	outline-color: var(--range-track-outline-color);
	background: var(--range-track-background);
	color: var(--range-track-color);
	height: calc(var(--range-track-height) + var(--range-track-border-width) * 2);
	width: var(--range-track-width);
}
input[type="range"]::-moz-range-track {
	appearance: none;
	border-width: var(--range-track-border-width) 0px;
	border-style: var(--range-track-border-style);
	border-color: var(--range-track-border-color);
	border-radius: var(--range-track-border-radius);
	outline-width: var(--range-track-outline-width);
	outline-style: var(--range-track-outline-style);
	outline-color: var(--range-track-outline-color);
	background: var(--range-track-background);
	color: var(--range-track-color);
	height: var(--range-track-height);
	width: var(--range-track-width);
}
input[type="range"]::-webkit-slider-thumb {
	position: relative; /* Needed to draw above the progress fill element */
	z-index: 2;
	appearance: none;
	border: none;
	border-radius: var(--range-thumb-border-radius);
	outline-width: var(--range-thumb-outline-width);
	outline-style: var(--range-thumb-outline-style);
	outline-color: var(--range-thumb-outline-color);
	background: var(--range-thumb-background);
	height: var(--range-thumb-height);
	width: var(--range-thumb-width);
	box-shadow: var(--range-thumb-box-shadow);
	transform: translateY(calc(calc(var(--range-thumb-height) - var(--range-track-height)) * -0.5)) var(--range-thumb-transform);
	user-select: none;
	pointer-events: none;
}
input[type="range"]::-moz-range-thumb {
	appearance: none;
	border: none;
	border-radius: var(--range-thumb-border-radius);
	outline-width: var(--range-thumb-outline-width);
	outline-style: var(--range-thumb-outline-style);
	outline-color: var(--range-thumb-outline-color);
	background: var(--range-thumb-background);
	height: var(--range-thumb-height);
	width: var(--range-thumb-width);
	box-shadow: var(--range-thumb-box-shadow);
	transform: var(--range-thumb-transform);
	user-select: none;
	pointer-events: none;
}
/* Chromium and Safari don't appear to have a psudo-element we can tap into */
@supports not (selector(input[type="range"]::-moz-range-track)) {
	input[type="range"]::before{
		pointer-events: none;
		position: absolute;
		top: calc(50% - var(--range-progress-height) / 2);
		content: " ";
		display:block;
		background: var(--range-progress-background);
		height: var(--range-progress-height);
		/* This is where the magic happens, --range-workaround-fill-amount is set by JS. */
		width: calc(var(--range-track-width) * var(--range-workaround-fill-amount));
		border-radius: var(--range-progress-border-radius);
	}
}
input[type="range"]::-moz-range-progress {
	background: var(--range-progress-background);
	height: var(--range-progress-height);
	border-radius: var(--range-progress-border-radius);
}

/*!************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js!./styles/shared/inputs/text-and-selections.css ***!
  \************************************************************************************************/
/* Copyright © 2024 Crown Finance Ltd. All Rights Reserved. */
:where(
	input:where(
		[type="email"],
		[type="datetime-local"],
		[type="email"],
		[type="month"],
		[type="number"],
		[type="password"],
		[type="search"],
		[type="tel"],
		[type="text"],
		[type="time"],
		[type="url"],
		[type="week"],
	),
	textarea,
	select
) {
	outline: none;
	border: 1px solid var(--colour-primary-600);
	background: var(--colour-primary-900);
	border-radius: 4px;
	padding: 6px;
	color: var(--colour-neutral-secondary);
	font-size: 14px;
	line-height: 1;
	box-sizing: border-box;
	max-width: 100%;
}
label:has( > input:where(
	[type="email"],
	[type="datetime-local"],
	[type="email"],
	[type="month"],
	[type="number"],
	[type="password"],
	[type="search"],
	[type="tel"],
	[type="text"],
	[type="time"],
	[type="url"],
	[type="week"],
)) {
	font-size: 12px;
	margin-top: 8px;
	margin-bottom: 8px;
	display: flex;
	flex-direction: column;
}

:where(
	input:where(
		[type="email"],
		[type="datetime-local"],
		[type="email"],
		[type="month"],
		[type="number"],
		[type="password"],
		[type="search"],
		[type="tel"],
		[type="text"],
		[type="time"],
		[type="url"],
		[type="week"],
	),
	textarea,
	select
):hover:not(:disabled) {
	border-color: var(--colour-primary-500);
}
:where(
	input:where(
		[type="email"],
		[type="datetime-local"],
		[type="email"],
		[type="month"],
		[type="number"],
		[type="password"],
		[type="search"],
		[type="tel"],
		[type="text"],
		[type="time"],
		[type="url"],
		[type="week"],
	),
	textarea,
	select
):is(:active, :focus):not(:disabled) {
	border-color: var(--colour-secondary-500);
	color: var(--colour-secondary-500);
}

:where(
	input:where(
		[type="email"],
		[type="datetime-local"],
		[type="email"],
		[type="month"],
		[type="number"],
		[type="password"],
		[type="search"],
		[type="tel"],
		[type="text"],
		[type="time"],
		[type="url"],
		[type="week"],
	),
	textarea,
	select
):is(.invalid-input, .invalid-input *, :invalid) {
	background: var(--linear-gradient-error-background);
}

:where(
	input:where(
		[type="email"],
		[type="datetime-local"],
		[type="email"],
		[type="month"],
		[type="number"],
		[type="password"],
		[type="search"],
		[type="tel"],
		[type="text"],
		[type="time"],
		[type="url"],
		[type="week"]
	),
	textarea,
	select
):is(:active, :focus):is(.invalid-input, .invalid-input *, :invalid):not(:disabled) {
	border-color: transparent;
	/* border-image doesn't respect border-radius even if it's set to a gradient, so we're doing background fuckery */
	background:
		var(--linear-gradient-error-background) padding-box,
		/* Only the bottom layer can be a solid colour, so we're doing this lol */
		linear-gradient(var(--colour-primary-900), var(--colour-primary-900)) padding-box,
		var(--linear-gradient-error) border-box;
}

:where(
	input:where(
		[type="email"],
		[type="datetime-local"],
		[type="email"],
		[type="month"],
		[type="number"],
		[type="password"],
		[type="search"],
		[type="tel"],
		[type="text"],
		[type="time"],
		[type="url"],
		[type="week"],
	),
	textarea,
	select
):disabled {
	opacity: 0.9;
	background: var(--colour-primary-500);
	cursor: not-allowed;
}


input[type="search"] {
	background: url(a5a02f3d25f6dc4d82cf.svg) 4px 50% / auto 80% scroll no-repeat, var(--colour-primary-900);
	padding-left: 28px;
}
input[type="search"]:is(:active, :focus):not(:disabled) {
	background: url(a5a02f3d25f6dc4d82cf.svg#active) 4px 50% / auto 80% scroll no-repeat, var(--colour-primary-900);
}
input[type="search"]:is(.invalid-input, .invalid-input *, :invalid) {
	background: url(a5a02f3d25f6dc4d82cf.svg) 4px 50% / auto 80% scroll no-repeat, var(--linear-gradient-error-background);
}
input[type="search"]:is(:active, :focus):not(:disabled):is(.invalid-input, .invalid-input *, :invalid) {
	border-color: transparent;
	/* border-image doesn't respect border-radius, even if it's set to a gradient, so we're doing background fuckery */
	background:
		url(a5a02f3d25f6dc4d82cf.svg#active) 4px 50% / auto 80% scroll no-repeat,
		var(--linear-gradient-error-background) padding-box,
		/* Only the bottom layer can be a solid colour, so we're doing this lol */
		linear-gradient(var(--colour-primary-900), var(--colour-primary-900)) padding-box,
		var(--linear-gradient-error) border-box;
}
input[type="search"]:disabled {
	background: url(a5a02f3d25f6dc4d82cf.svg) 4px 50% / auto 80% scroll no-repeat, var(--colour-primary-500);
}

select {
	-moz-appearance: none;
	-webkit-appearance: none;
	appearance: none;
	padding-right: 18px;
	font-family: var(--font-family-default);
	background: url(48c19bbb88bc97f2b81f.svg) calc(100% - 4px) 55% / auto 40% scroll no-repeat, var(--colour-primary-800);
	color: var(--colour-neutral-primary);
}
select:is(:active, :focus):not(:disabled) {
	color: var(--colour-secondary-800);
	border-color: transparent;
	background:
		url(48c19bbb88bc97f2b81f.svg#active_solid) calc(100% - 4px) 55% / auto 40% scroll no-repeat,
		linear-gradient(var(--colour-primary-800), var(--colour-primary-800)) padding-box,
		var(--linear-gradient-active) border-box;
}
select:not(:disabled):is(.invalid-input, .invalid-input *, :invalid) {
	color: var(--colour-error);
	background:
		url(48c19bbb88bc97f2b81f.svg#error_solid) calc(100% - 4px) 55% / auto 40% scroll no-repeat,
		var(--linear-gradient-error-background);
}
select:is(:active, :focus):not(:disabled):is(.invalid-input, .invalid-input *, :invalid) {
	color: var(--colour-neutral-primary);
	border-color: transparent;
	/* border-image doesn't respect border-radius, even if it's set to a gradient, so we're doing background fuckery */
	background:
		url(48c19bbb88bc97f2b81f.svg#error_solid) calc(100% - 4px) 55% / auto 40% scroll no-repeat,
		var(--linear-gradient-error-background) padding-box,
		/* Only the bottom layer can be a solid colour, so we're doing this lol */
		linear-gradient(var(--colour-primary-900), var(--colour-primary-900)) padding-box,
		var(--linear-gradient-error) border-box;
}
select:disabled {
	color: var(--colour-neutral-secondary);
	background:
		url(48c19bbb88bc97f2b81f.svg#disabled_solid) calc(100% - 4px) 55% / auto 40% scroll no-repeat,
		var(--colour-primary-500);
}

/* Stuff for chromium */
select * {
	color: var(--colour-neutral-primary);
	background-color: var(--colour-primary-800);
}
select *:is(:hover, :active, :focus, :checked) {
	color: var(--colour-secondary-500);
	background-color: var(--colour-primary-700);
}

/*!**********************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js!./styles/shared/inputs/group.css ***!
  \**********************************************************************************/
/* Copyright © 2024 Crown Finance Ltd. All Rights Reserved. */
.fantasy-input-group {
	min-height: 60px;
	min-width: 100px;
	border: 1px solid var(--colour-primary-500);
	background: var(--input-group-bg);
	margin: 2px 8px;
	border-image:
		/* -source */
		url(5c3ca482796e44f1dcc0.svg)
		/* -slice (top, right, bottom, left) */
		39 50 39 50 /
		/* -width (top, right, bottom, left) */
		39px 50px 39px 50px /
		/* outset */
		8px
		/* -repeat (x, y) */
		stretch stretch;
	border-radius: 8px;
	display: flex;
	align-items: center;
	justify-content: space-between;
	flex-wrap: wrap;
	padding: 0px 10px;
	color: var(--colour--input-group-text);
	line-height: 1em;
	font-family: var(--font-family-fantasy);
	transition: box-shadow 0.1s ease-in-out;
}
.fantasy-input-group:has(> :first-child:not(button)) {
	padding-left: 24px;
}
.fantasy-input-group:has(> :last-child:not(button)) {
	padding-right: 24px;
}
.fantasy-input-group.small {
	min-height: 44px;
	padding: 0px 2px;
	border-image-outset: 6px;
	border-radius: 6px;
}
.fantasy-input-group.small:has(> :first-child:not(button)) {
	padding-left: 8px;
}
.fantasy-input-group.small:has(> :last-child:not(button)) {
	padding-right: 8px;
}
.fantasy-input-group.success {
	border-image-source: url(5c3ca482796e44f1dcc0.svg#success);
	background: var(--input-group-bg-success);
}
.fantasy-input-group.warning {
	border-image-source: url(5c3ca482796e44f1dcc0.svg#warning);
	background: var(--input-group-bg-warning);
}
.fantasy-input-group:has(:focus-visible), /* Change to :focus? */
.fantasy-input-group:has(:where(input, button, select):hover)
/*.fantasy-input-group:has(button:hover)*/ {
	border-image-source: url(5c3ca482796e44f1dcc0.svg#active);
	box-shadow: inset 0px 0px 48px -32px var(--colour-secondary-900);
}

.fantasy-input-group:has(:focus-visible) {
	box-shadow: inset 0px 0px 48px -24px var(--colour-secondary-900);
}

.fantasy-input-group.danger,
.fantasy-input-group.invalid-input,
.fantasy-input-group:has(:invalid),
.invalid-input .fantasy-input-group {
	border-image-source: url(5c3ca482796e44f1dcc0.svg#danger);
	background: var(--input-group-bg-error);
}

.fantasy-input-group:not(:has(input:not(:disabled), button:not(:disabled))) {
	border-image-source: url(5c3ca482796e44f1dcc0.svg#disabled);
	color: var(--colour-neutral-secondary);
	background: var(--input-group-bg-disabled);
	filter: grayscale(1);
}


.fantasy-input-group input:where(
	[type="email"],
	[type="datetime-local"],
	[type="email"],
	[type="month"],
	[type="number"],
	[type="password"],
	[type="search"],
	[type="tel"],
	[type="text"],
	[type="time"],
	[type="url"],
	[type="week"],
) {
	font-family: var(--font-family-fantasy);
	font-size: var(--font-size-xlarge);
	padding: 0;
	background: none !important;
	border-radius: 0;
	border-left: none;
	border-top: none;
	border-right: none;
	border-bottom-width: 2px;
	/*border-bottom-color: currentcolor !important;*/
	color: var(--colour-secondary-500);
}
.fantasy-input-group > input:not(:first-child) {
	width: 2em; /* Text inputs have an innate size, let's not deal with that */
	flex-grow: 1;
}

.fantasy-input-group input:where(
	[type="email"],
	[type="datetime-local"],
	[type="email"],
	[type="month"],
	[type="number"],
	[type="password"],
	[type="search"],
	[type="tel"],
	[type="text"],
	[type="time"],
	[type="url"],
	[type="week"],
):disabled {
	color: var(--colour-neutral-secondary)
}
.fantasy-input-group input[type="number"] {
	font-family: var(--font-family-default);
}
/* Only 1 input element with an optional single sibling */
.fantasy-input-group:has(> input:only-of-type:first-child):not(:has(:nth-child(3))) {
	flex-direction: column;
	align-items: stretch;
	justify-content: space-around;
}
.fantasy-input-group > input:only-of-type:first-child + :last-child {
	font-size: var(--font-size-normal);
}
.fantasy-input-group:has(.input-group-inner-stack input) {
	flex-wrap: nowrap;
}

.input-group-inner-stack {
	margin: 0px 4px;
	align-self: stretch;
	display: flex;
	flex-direction: column;
	align-items: stretch;
	flex-grow: 1;
	justify-content: space-around;
}
.input-group-inner-stack input {
	width: 100%; /* I don't know why this works, but it's happening. */
}

/*!****************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js!./styles/shared/inputs/fantasy-menu-item-block.css ***!
  \****************************************************************************************************/
/* Copyright © 2024 Crown Finance Ltd. All Rights Reserved. */
.fantasy-menu-item-block {
	position: relative;
	border: 1px solid var(--colour-primary-500);
	border-radius: 4px;
	background: linear-gradient(0deg, var(--colour-primary-900), var(--colour-primary-800));
	padding: 2px 12px;
	transition: box-shadow 0.1s ease-in-out;
}
.fantasy-menu-item-block::after {
	display: block;
	position: absolute;
	content: "\a0";
	top: 0;
	left: -8px;
	width: calc(100% + 16px);
	height: 100%;
	background:
		url(5c602477f556903c7c0f.svg) 0% center / auto 16px no-repeat,
		url(5c602477f556903c7c0f.svg) 100% center / auto 16px no-repeat,
		#ffffff00;
	user-select: none;
	pointer-events: none;
}

.fantasy-menu-item-block:hover,
.fantasy-menu-item-block:focus-visible,
.fantasy-menu-item-block:has(:focus-visible),
.fantasy-menu-item-block:active {
	border-color: transparent;
	background:
		linear-gradient(var(--colour-primary-900), var(--colour-primary-800)) padding-box,
		var(--linear-gradient-active) border-box;
	box-shadow: inset 0px 0px 48px -24px var(--colour-secondary-900);
}
.fantasy-menu-item-block:active {
	box-shadow: inset 0px 0px 32px 4px var(--colour-secondary-900);
}
.badge {
	padding: 2px 4px;
	background: var(--colour-primary-700);
	border-radius: 4px;
}

/*!*************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js!./styles/shared/inputs/app-tabs.css ***!
  \*************************************************************************************/
/* Copyright © 2024 Crown Finance Ltd. All Rights Reserved. */
menu[is="fantasy-tabs"] {
	--tab-marker-opacity: 0;
	--tab-marker-offset-x: 0px;
	--tab-marker-offset-y: 0px;
	position: relative;
	display: flex;
	flex-direction: row;
	align-items: center;
	justify-content: space-around;
	flex-wrap: wrap;
	padding: 0;

	font-family: var(--font-family-fantasy);
	line-height: 1em;
}
/* Marker definition */
menu[is="fantasy-tabs"]::after {
	display: block;
	position: absolute;
	left: var(--tab-marker-offset-x);
	top: var(--tab-marker-offset-y);
	opacity: var(--tab-marker-opacity);
	
	width: min-content;
	height: min-content;
	
	/* Copy pasta from icons */
	font-family: "crowndings";
	font-synthesis: none;
	text-transform: none;
	line-height: 1;
	-webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;

	font-size: var(--icon-size-xsmall);
	content: "\e109"; /* cicon-fantasy-marker-down */
	color: transparent;
	background: var(--linear-gradient-active);
	background-clip: text;

	user-select: none;
	pointer-events: none;
	
	transition: top 0.45s cubic-bezier(.17,.84,.44,1), left 0.45s cubic-bezier(.17,.84,.44,1), opacity 0.2s ease-in-out;
}

menu[is="fantasy-tabs"] > li {
	margin: 20px;
	position: relative;
	z-index: 0;
	aspect-ratio: 1 / 1;
	min-height: 78px;
	min-width: 78px;
	border: none;
	padding: 8px;

	display: flex;
	align-items: center;
	justify-content: center;
	flex-direction: column;

	user-select: none;

	transition: opacity 0.2s ease-in-out;
	opacity: 0.7;
}
menu[is="fantasy-tabs"] > li.selected {
	opacity: 1;
}
menu[is="fantasy-tabs"]:not([disabled]) > li:hover:not([disabled])::before,
menu[is="fantasy-tabs"]:not([disabled]) > li:focus-visible:not([disabled])::before {
	box-shadow: inset 0px 0px 24px -10px var(--colour-secondary-900);
}
menu[is="fantasy-tabs"]:not([disabled]) > li:active:not([disabled])::before,
menu[is="fantasy-tabs"]:not([disabled]) > li.active:not([disabled])::before {
	box-shadow: inset 0px 0px 30px 1px var(--colour-secondary-900);
}
menu[is="fantasy-tabs"] > li:focus-visible {
	outline: 1px solid var(--colour-secondary-500);
	outline-offset: 32px;
} 
menu[is="fantasy-tabs"] > li > * {
	margin: 2px 0px;
}
/* Background definition */
menu[is="fantasy-tabs"] > li::before {
	display: block;
	content: "\a0";
	position: absolute;
	z-index: -1;
	top: 0px;
	left: 0px;
	width: 100%;
	height: 100%;
	box-sizing: border-box;
	border: 1px solid var(--colour-secondary-800);
	border-radius: 22px;

	border-image:
		/* -source */
		url(8a3b3a00dfaf21c580b4.svg#active)
		/* -slice (top, right, bottom, left) */
		30 /
		/* -width (top, right, bottom, left) */
		30px
		/* -repeat (x, y) */
		stretch stretch;

	background: var(--colour-primary-800);
	transition: box-shadow 0.1s ease-in-out;
	transform: rotate(45deg);
}
/**/

menu[is="fantasy-tabs"][disabled] > li::before,
menu[is="fantasy-tabs"] > li[disabled]::before {
	border-color: var(--colour-neutral-secondary);
	border-image-source: url(8a3b3a00dfaf21c580b4.svg#disabled);
	background: var(--colour-primary-600); /* fixed by grayscale */
}


menu[is="fantasy-tabs"][disabled],
menu[is="fantasy-tabs"][disabled] > li, 
menu[is="fantasy-tabs"] > li[disabled] {
	filter: grayscale(1);
	opacity: 1;
	cursor: not-allowed;
}

/*!**********************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js!./styles/shared/inputs/index.css ***!
  \**********************************************************************************/


/*!************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js!./styles/shared/dropdown-menus.css ***!
  \************************************************************************************/
/* Copyright © 2024 Crown Finance Ltd. All Rights Reserved. */
active-dropdown-menu {
	margin: 0px;
	padding: 0px;
	font-size: var(--font-size-normal);

	color: var(--colour-neutral-primary);
	background-color: var(--colour-primary-700);
	border: 1px solid var(--colour-primary-500);
	border-radius: 4px;
	box-sizing: border-box;
	max-width: 100vw;
}
/*
	text-decor.css checks for :not(.pattern-repeat) for the min-width.
	Only rules with classes can override other rules with classes.
*/
active-dropdown-menu hr:not(.lmao-specificity-is-whack) {
	margin: -0.2em 0em;
	height: 0.8em;
	min-width: 8em;
}
active-dropdown-menu-item {
	margin: 2px;
	padding: 2px;
	/* Puts the sub-menu arrow or the input in the right place */
	display: flex;
	justify-content: space-between;
	align-items: center;
}
active-dropdown-menu-item, active-dropdown-menu-item * {
	overflow: hidden;
	text-overflow: ellipsis;
}
active-dropdown-menu-item:has(active-dropdown-menu)::after {
	margin-left: 0.75em;
	margin-right: 0.25em;
	content: "▸";
}

/* Menu items are auto-focused on hover */
active-dropdown-menu-item:focus,
/* Menu items have this class added when they're clicked */
active-dropdown-menu-item.dropdown-selected,
/* sub-menus which are not inert are opened */
active-dropdown-menu-item:has(active-dropdown-menu:not([inert])) {
	outline: none;
	background-color: var(--colour-primary-600);
	color: var(--colour-secondary-600);
}
/* menu items can have a "disabled" attribute, though this doesn't work with the :disabled psudo class */
active-dropdown-menu-item[disabled],
active-dropdown-menu-item[disabled]:has(active-dropdown-menu:not([inert])) {
	cursor: not-allowed;
	color: var(--colour-neutral-secondary);
	/*color: var(--colour-neutral-primary);*/
}

/* classes on the <dropdown-menu> are copied to the <active-dropdown-menu> */
active-dropdown-menu.matching-width {
	/* This CSS variable is set to the root <active-dropdown-menu> */
	min-width: var(--triggering-element-client-width);
}

/* And we gotta style the checkboxes and radio buttons too... */
active-dropdown-menu-item > input:where([type="checkbox"], [type="radio"]):last-child {
	position: absolute;
	/* Clicking the checkbox directly results in different behaviour vs clicking the whole menu item, so let's... deal with that. */
	right: 0.1em;
	width: 1.4em;
	height: 1.4em;
	opacity: 0;
}
active-dropdown-menu-item:has( > input:where([type="checkbox"], [type="radio"]):last-child)::after {
	display: inline-block;
	width: min-content;
	height: min-content;
	font-family: var(--toggle-char-font);
	font-synthesis: none;
	text-transform: none;
	font-size: 1.2em;
	line-height: 1;
	-webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;
	color: transparent;
	margin-left: 0.15em;
	background: var(--toggle-fill-unchecked);
	background-clip: text;
}
active-dropdown-menu-item:has( > input:where([type="checkbox"], [type="radio"]):last-child:checked)::after {
	background: var(--toggle-fill-checked);
	background-clip: text;
}
active-dropdown-menu-item:has( > input:where([type="checkbox"], [type="radio"]):last-child:disabled)::after {
	background: var(--toggle-fill-disabled);
	background-clip: text;
}

active-dropdown-menu-item:has( > input[type="checkbox"]:last-child)::after {
	content: var(--toggle-checkbox-char-unchecked);
}

active-dropdown-menu-item:has( > input[type="checkbox"]:checked:last-child)::after {
	content: var(--toggle-checkbox-char-checked);
}

active-dropdown-menu-item:has( > input[type="checkbox"]:not(:disabled):active:last-child)::after,
active-dropdown-menu-item:has( > input[type="checkbox"]:not(:disabled):last-child):active::after {
	content: var(--toggle-checkbox-char-transition);
}

active-dropdown-menu-item:has( > input[type="radio"]:last-child)::after{
	content: var(--toggle-radio-char-unchecked);
}

active-dropdown-menu-item:has( > input[type="radio"]:checked:last-child)::after {
	content: var(--toggle-radio-char-checked);
}

active-dropdown-menu-item:has( > input[type="radio"]:not(:disabled):active:last-child)::after,
active-dropdown-menu-item:has( > input[type="radio"]:not(:disabled):last-child):active::after {
	clip-path: none;
	content: var(--toggle-radio-char-transition);
}


@keyframes dropdown-open-y {
	0% {
		transform: scale(1, 0.01);
		opacity: 0;
	}
	10% {
		transform: scale(1, 0.01);
		opacity: 1;	
	}
	100%{
		transform: scale(1, 1);
	}
}
@keyframes dropdown-open-x {
	0% {
		transform: scale(0.01, 1);
		opacity: 0;
	}
	10% {
		transform: scale(0.01, 1);
		opacity: 1;	
	}
	100%{
		transform: scale(1, 1);
	}
}
/* Set origin for scale() based on open direction */
active-dropdown-menu:is(.dropdown-downward, .dropdown-rightward) {
	/* top left */
	transform-origin: 1px 1px;
}
active-dropdown-menu:is(.dropdown-upward, .dropdown-leftward) {
	/* bottom-right */
	transform-origin: calc(100% - 1px) calc(100% - 1px);
}
active-dropdown-menu:is(.dropdown-downward, .dropdown-upward) {
	animation: 0.15s ease-in normal 0s dropdown-open-y;
}
/* Menus which are closing should play their closing animation */
active-dropdown-menu:is(.dropdown-downward, .dropdown-upward).dropdown-closing {
	animation: 0.2s ease-out reverse forwards 0s dropdown-open-y;
}

active-dropdown-menu:is(.dropdown-rightward, .dropdown-leftward) {
	animation: 0.15s ease-in normal 0s dropdown-open-x;
}
/* Menus which are closing should play their closing animation */
active-dropdown-menu:is(.dropdown-rightward, .dropdown-leftward).dropdown-closing {
	animation: 0.2s ease-out reverse forwards 0s dropdown-open-x;
}

/*!********************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js!./styles/shared/text-decor.css ***!
  \********************************************************************************/
/* Copyright © 2024 Crown Finance Ltd. All Rights Reserved. */
hr {
	height: 28px;
	border: 0;
	margin: 6px 0px;
	background: url(21b8e2253671c5dd0bb2.svg) center / auto 100% space;
}

hr:not(.pattern-repeat):where(.pattern-stretch, .pattern-stretch-auto) {
	background: url(21b8e2253671c5dd0bb2.svg#only_inside) center 0% / auto 100% no-repeat;
	min-width: 280px;
	border-image:
		/* -source */
		url(21b8e2253671c5dd0bb2.svg#only_outside)
		/* -slice (top, right, bottom, left) */
		14 36 14 36 /
		/* -width (top, right, bottom, left) */
		14px 36px
		/* -repeat (x, y) */
		stretch repeat
		;
}

/*
	Due to the width of the original image (280px) stretching the image ruins the effect after 1064px.
	So we'll clamp the width of the <hr> element and center it. These are <hr> elements explicitly specified to never
	use "repeat". 
*/
hr.pattern-stretch {
	max-width: 1064px;
	margin: 6px auto;
}

/*!*********************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js!./styles/shared/main-navbar.css ***!
  \*********************************************************************************/
/* Copyright © 2024 Crown Finance Ltd. All Rights Reserved. */
html:has(.main-navbar) {
	scroll-padding-top: 88px; /* height of sticky header */
}
/* This is needed when using the fixed-position html hack in screen.css */
body:has(.main-navbar) {
	scroll-padding-top: 88px; /* height of sticky header */
}
.main-navbar {
	margin: 0px;

	display: flex;
	justify-content: space-between;
	align-items: center;

	position: sticky;
	top: 0px;
	left: 0px;
	background:	var(--colour-primary-900-a50);
	backdrop-filter: blur(4px);
	z-index: 100;
}
@supports not (backdrop-filter: blur(4px)){
	.main-navbar {
		/* Remove after Safari stops thinking different */
		-webkit-backdrop-filter: blur(4px);
	}
}
.main-navbar-logo {
	height: 64px;
	width: auto;
	content: url(f44b668680a6315281ac.svg);
}
/* For some reason the element increases its height without this */
a:has(> .main-navbar-logo:only-child) {
	line-height: 0.5em;
	text-wrap: nowrap;
}

a:focus-visible .main-navbar-logo,
a:hover .main-navbar-logo {
	filter: drop-shadow(0px 0px 8px var(--colour-secondary-500));
}
a:active .main-navbar-logo {
	filter: drop-shadow(0px 0px 4px var(--colour-secondary-500));
}
.main-navbar > div:first-child {
	display: flex;
	justify-content: space-between;
	align-items: center;
}
.main-navbar > menu {
	padding: 0px;
	font-size: var(--font-size-large);
}
.main-navbar > menu > li {
	list-style: none;

}
/* Rules for larger screens, desktops, etc. */
@media (min-width: 999.9999px) {
	.main-navbar {
		margin: 24px 0px;
		padding: 8px 32px;
	}
	.main-navbar .navbar-toggle {
		display: none;
	}
	.main-navbar > menu {
		display: flex;
		justify-content: flex-end;
		align-items: center;
	}
	.main-navbar > menu > li {
		margin: 0px 16px;
	}
	.main-navbar > menu > hr:first-child {
		display: none;
	}
}
/* Rules for smaller screens, phones, etc.*/
@media (max-width: 1000px) {
	.main-navbar {
		padding: 8px 8px;
	}
	.main-navbar > div:first-child {
		display: flex;
		justify-content: space-between;
		align-items: center;
		flex-grow: 1;
	}
	.main-navbar > menu:last-of-type {
		position: absolute;
		box-sizing: border-box;
		top: 100%;
		left: 0%;
		width: 100%;
		padding: 8px 32px;
		margin: 0px;

		background:	var(--colour-primary-900-a50);
		backdrop-filter: blur(4px);
		
		display: flex;
		flex-direction: column;
		justify-content: center;
		align-items: center;

		transform-origin: 50% 0%;
		transition: transform 0.2s ease-in-out, opacity 0.2s ease-in-out;
	}
	@supports not (backdrop-filter: blur(4px)){
		.main-navbar > menu:last-of-type {
			/* Remove after Safari stops thinking different */
			-webkit-backdrop-filter: blur(4px);
		}
	}
	.main-navbar > menu > hr:first-child {
		width: 100%;
		margin: 0px;
	}
	.main-navbar:has(label.navbar-toggle > input:not(:checked)) > menu:last-of-type {
		opacity: 0;
		transform: scale(1, 0.0001);
		pointer-events: none;
		user-select: none;
	}
	.main-navbar > menu > li {
		margin: 8px 0px;
	}
}
label.navbar-toggle:has( > input[type="checkbox"]:only-child)::after {
	width: min-content;
	height: min-content;
	background-clip: text;
	font-family: var(--toggle-char-font);
	font-size: var(--icon-size-xlarge);
	font-synthesis: none;
	text-transform: none;
	line-height: 1;
	-webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;
	color: transparent;
	clip-path: none;

	content: "\e015"; /* cicon-bar*/
}

/*!***************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js!./styles/shared/div-transitionful.css ***!
  \***************************************************************************************/
div-transitionful {
	--div-transitionful-fade-time: 0.3s;
	--div-transitionful-resize-time: 0.7s;
	max-width: calc(100vw - 16px);
	display: block;
	overflow: hidden;
	box-sizing: border-box;
	height: 0px;
	transition: height ease-in-out var(--div-transitionful-resize-time), width ease-in-out var(--div-transitionful-resize-time);
	/* debug shit */
	background-color: blue;
	margin: auto;

}

@keyframes div-transitionful-fade-in {
	0% {
		filter: blur(32px);
		opacity: 0;
	}
	100%{
		filter: blur(0px);
		opacity: 1;
	}
}

@keyframes div-transitionful-fade-out {
	0% {
		filter: blur(0px);
		opacity: 1;
	}
	100%{
		filter: blur(32px);
		opacity: 0;
	}
}

/*!****************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js!./styles/shared/dialog.css ***!
  \****************************************************************************/
/**/
dialog {
	background: var(--background-container-noisy);
	border: 2px solid #3c3e4a;
	border-radius: 8px;
	padding: 18px;
	color: var(--colour-neutral-primary);
}

.button-row {
	display: flex;
	flex-wrap: wrap;
	align-items: center;
	justify-content: space-around;
	gap: 4px;
}
.button-row.equal-width > * {
	flex: 1 1 0;
	min-width: 88px;
}
.button-row.equal-width > *:only-child {
	flex: 0 0 auto;
	min-width: 112px;
}
dialog > h1:first-child {
	font-size: var(--font-size-xlarge);
	font-weight: bold;
	background: var(--linear-gradient-active);
	background-clip: text;
	color: #00000000;
	padding-bottom: 0.2em;
	margin-bottom: 0em; /* Already has a "margin" for padding. */
}
dialog > h1:first-child::after {
	content: '';
	display: block;
	background: var(--linear-gradient-active);
	background-size:contain;
	height: 2px;
	width: 100%;
	margin-top: 2px;
	margin-bottom: 2px;
}
dialog > h1:first-child + .dialog-cicon {
	float: left;
	/* The top margin ensures that the icon (mostly) aligns with the first 2 lines of a <p> element */
	margin-top: 4.8px;
	margin-right: 4px;
}
dialog > h1:first-child + .dialog-cicon + p:not(:has( + p)) {
	min-height: 2.4em;
	display: flex;
	align-items: center;
}
dialog p {
	margin-top: 0.5em;
	margin-bottom: 0.5em;
}
dialog > p:first-child {
	margin-top: 0px;
}
dialog.danger > h1:first-child,
dialog.danger > h1:first-child::after {
	background-image: var(--linear-gradient-error);
}
dialog.warning > h1:first-child,
dialog.warning > h1:first-child::after {
	background-image: var(--linear-gradient-warning);
}
dialog.success > h1:first-child,
dialog.success > h1:first-child::after {
	background-image: var(--linear-gradient-success);
}
dialog::backdrop {
	background-color: var(--colour-primary-800-a50);
}
dialog:modal {
	/* Auto-compensate for border width */
	box-sizing: border-box;
	/*min-width: min(200px, calc(100vw - 6px));*/
	max-width: min(550px, calc(100vw - 6px));
}

dialog > textarea {
	resize: none;
	width: 100%;
	box-sizing: border-box;
	margin-top: 0.5em;
	margin-bottom: 0.5em;
	height: 7em;
}
dialog:modal:has(> textarea) {
	width: 700px;
	max-width: calc(100vw - 6px);
	max-height: calc(100vh - 6px);
}
@media (max-width:720px) {
	dialog:modal:has(> textarea) {
		width: 550px;
	}
	dialog > textarea {
		font-size: 10px;
		padding:0px;
	}
}
@media (max-width:550px) {
	dialog {
		padding: 8px;
	}
}
@media (max-width:500px) { 
	dialog > textarea {
		font-size: 8px;
		padding:0px;
	}
}
@media (max-width:400px) { 
	dialog > textarea {
		font-size: 6px;
		padding:0px;
	}
}

/*!***************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js!./styles/shared/index.css ***!
  \***************************************************************************/


/*!******************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js!./styles/smartphone/inputs/buttons.css (media (max-width:600px)) ***!
  \******************************************************************************************************************/
@media (max-width:600px) {
:where(button, label.button, a.button).fantasy:not(.no-scale) {
	min-height: 32px;
	padding: 0px 18px;
}
:where(button, label.button, a.button).fantasy:not(.no-scale)::before {
	left: 0px;
	border: none;
	/* ViewPort: 0 0 112 42 */
	clip-path: polygon(
		19px 0%,
		14px 1px,
		9px 5px,
		1px 50%,
		9px calc(100% - 5px),
		14px calc(100% - 1px),
		19px 100%,
		calc(100% - 19px) 100%,
		calc(100% - 14px) calc(100% - 1px),
		calc(100% - 9px) calc(100% - 5px),
		calc(100% - 1px)  50%,
		calc(100% - 9px) 5px,
		calc(100% - 14px) 1px,
		calc(100% - 19px) 0%
	);
}
:where(button, label.button, a.button).fantasy:not(.no-scale)::after {
	border-width: 1px;
	left: -1px;
}

:where(button, label.button, a.button).fantasy-ornamental:not(.no-scale) {
	min-height: 42px;
	padding: 0px 24px;
	border-left-width: 12px;
	border-right-width: 12px;
	border-bottom-width: 4px;
}
label.button.fantasy-ornamental:has( > input:is([type="checkbox"], [type="radio"]):not(.specificity-is-amazing-yay):last-child)  {
	padding-right: 24px;
}

:where(button, label.button, a.button).fantasy-ornamental:not(.no-scale)::before {
	left: -12px;
	top: -1px;
	clip-path: polygon(
		32px 0px,
		26px 2px,
		20px 8px,
		12px 19px,
		20px calc(38px - 8px),
		26px calc(38px - 2px),
		32px 38px,
		calc(100% - 32px) 38px,
		calc(100% - 26px) calc(38px - 2px),
		calc(100% - 20px) calc(38px - 8px),
		calc(100% - 12px) 19px,
		calc(100% - 20px) 8px,
		calc(100% - 26px) 2px,
		calc(100% - 32px) 0px
	);
}
:where(button, label.button, a.button).fantasy-ornamental:not(.no-scale)::after {
	left: -12px;
	border-left-width: 12px;
	border-right-width: 12px;
	border-bottom-width: 4px;
}

}
/*!****************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js!./styles/smartphone/inputs/index.css (media (max-width:600px)) ***!
  \****************************************************************************************************************/
@media (max-width:600px) {


}
/*!*********************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js!./styles/smartphone/index.css (media (max-width:600px)) ***!
  \*********************************************************************************************************/
@media (max-width:600px) {


}
/*!********************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js!./styles/index.css ***!
  \********************************************************************/


