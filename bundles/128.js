"use strict";(self.webpackChunk_crownfi_csswap_mvp_frontend=self.webpackChunk_crownfi_csswap_mvp_frontend||[]).push([[128],{50128:(s,t,e)=>{e.r(t),e.d(t,{LCDQueryClient:()=>n});var a=e(60141);class n{constructor({requestClient:s}){(0,a.Z)(this,"req",void 0),this.req=s,this.currentPlan=this.currentPlan.bind(this),this.appliedPlan=this.appliedPlan.bind(this),this.upgradedConsensusState=this.upgradedConsensusState.bind(this),this.moduleVersions=this.moduleVersions.bind(this),this.authority=this.authority.bind(this)}async currentPlan(s={}){return await this.req.get("cosmos/upgrade/v1beta1/current_plan")}async appliedPlan(s){const t=`cosmos/upgrade/v1beta1/applied_plan/${s.name}`;return await this.req.get(t)}async upgradedConsensusState(s){const t=`cosmos/upgrade/v1beta1/upgraded_consensus_state/${s.lastHeight}`;return await this.req.get(t)}async moduleVersions(s){const t={params:{}};return void 0!==(null==s?void 0:s.moduleName)&&(t.params.module_name=s.moduleName),await this.req.get("cosmos/upgrade/v1beta1/module_versions",t)}async authority(s={}){return await this.req.get("cosmos/upgrade/v1beta1/authority")}}}}]);